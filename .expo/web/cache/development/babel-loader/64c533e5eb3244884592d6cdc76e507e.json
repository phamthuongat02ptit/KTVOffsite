{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ACTION_NAME } from \"../Constants/login\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { showMessage } from \"react-native-flash-message\";\nimport config from \"../../Config/appsetting\";\nimport AUTHORIZE from \"../../Config/authorize\";\nexport function SetInfoLogin(userLogin) {\n  return {\n    type: ACTION_NAME.SetInfoLogin,\n    payload: _objectSpread({}, userLogin)\n  };\n}\n;\nexport var GetInfoLogin = function GetInfoLogin() {\n  return function _callee(dispatch) {\n    var userLogin;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userLogin'));\n\n          case 3:\n            userLogin = _context.sent;\n            dispatch(SetInfoLogin(JSON.parse(userLogin)));\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n};\nexport var LoginApp = function LoginApp(userName, password) {\n  return function _callee2(dispatch) {\n    var result;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(axios.get(config.APIHOST + \"/api/Account/Login\", _objectSpread({}, AUTHORIZE.GetConfigLogin(userName, password))));\n\n          case 3:\n            result = _context2.sent;\n\n            if (!result.data.AccessToken) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"userLogin\", JSON.stringify(_objectSpread({}, result.data))));\n\n          case 7:\n            _context2.next = 10;\n            break;\n\n          case 9:\n            showMessage({\n              message: result.data.messenger,\n              type: \"warning\",\n              position: 'top'\n            });\n\n          case 10:\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 12]], Promise);\n  };\n};","map":{"version":3,"sources":["D:/react/SunhouseKTV/Redux/Action/login.js"],"names":["ACTION_NAME","AsyncStorage","axios","showMessage","config","AUTHORIZE","SetInfoLogin","userLogin","type","payload","GetInfoLogin","dispatch","getItem","JSON","parse","console","log","LoginApp","userName","password","get","APIHOST","GetConfigLogin","result","data","AccessToken","setItem","stringify","message","messenger","position"],"mappings":";;;;;;;AAAA,SAASA,WAAT;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,4BAA5B;AAEA,OAAOC,MAAP;AACA,OAAOC,SAAP;AAEA,OAAO,SAASC,YAAT,CAAsBC,SAAtB,EAAiC;AACtC,SAAO;AACLC,IAAAA,IAAI,EAAER,WAAW,CAACM,YADb;AAELG,IAAAA,OAAO,oBAAOF,SAAP;AAFF,GAAP;AAID;AAAA;AAED,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEhC,SAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEqBV,YAAY,CAACW,OAAb,CAAqB,WAArB,CAFrB;;AAAA;AAEGL,YAAAA,SAFH;AAGHI,YAAAA,QAAQ,CAACL,YAAY,CAACO,IAAI,CAACC,KAAL,CAAWP,SAAX,CAAD,CAAb,CAAR;AAHG;AAAA;;AAAA;AAAA;AAAA;AAKHQ,YAAAA,OAAO,CAACC,GAAR;;AALG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAQD,CAVM;AAaP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAWC,QAAX,EAAwB;AAE9C,SAAO,kBAAOR,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAGkBT,KAAK,CACvBkB,GADkB,CACXhB,MAAM,CAACiB,OADI,2CAEdhB,SAAS,CAACiB,cAAV,CAAyBJ,QAAzB,EAAmCC,QAAnC,CAFc,EAHlB;;AAAA;AAGGI,YAAAA,MAHH;;AAAA,iBAmBCA,MAAM,CAACC,IAAP,CAAYC,WAnBb;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAoBKxB,YAAY,CAACyB,OAAb,CACJ,WADI,EAEJb,IAAI,CAACc,SAAL,mBAAoBJ,MAAM,CAACC,IAA3B,EAFI,CApBL;;AAAA;AAAA;AAAA;;AAAA;AAyBDrB,YAAAA,WAAW,CAAC;AAAEyB,cAAAA,OAAO,EAAEL,MAAM,CAACC,IAAP,CAAYK,SAAvB;AAAkCrB,cAAAA,IAAI,EAAE,SAAxC;AAAmDsB,cAAAA,QAAQ,EAAE;AAA7D,aAAD,CAAX;;AAzBC;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4BHf,YAAAA,OAAO,CAACC,GAAR;;AA5BG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AA+BD,CAjCM","sourcesContent":["import { ACTION_NAME } from \"../Constants/login\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport axios from \"axios\";\r\nimport { showMessage } from \"react-native-flash-message\";\r\n\r\nimport config from '../../Config/appsetting';\r\nimport AUTHORIZE from '../../Config/authorize'\r\n\r\nexport function SetInfoLogin(userLogin) {\r\n  return {\r\n    type: ACTION_NAME.SetInfoLogin,\r\n    payload: { ...userLogin },\r\n  };\r\n};\r\n\r\nexport const GetInfoLogin = () => {\r\n  //IN order to use await your callback must be asynchronous using async keyword.\r\n  return async (dispatch) => {\r\n    try {\r\n      const userLogin = await AsyncStorage.getItem('userLogin');\r\n      dispatch(SetInfoLogin(JSON.parse(userLogin)));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const LoginApp = (userName, password) => {\r\n  //IN order to use await your callback must be asynchronous using async keyword.\r\n  return async (dispatch) => {\r\n    try {\r\n\r\n      const result = await axios\r\n        .get(`${config.APIHOST}/api/Account/Login`, {\r\n          ...AUTHORIZE.GetConfigLogin(userName, password)\r\n        }\r\n          // {\r\n          //   params: {\r\n          //     appid: \"351A66D7-9640-442D-9DAB-69DA59631F06\",\r\n          //     username: userName,\r\n          //     password: password,\r\n          //     deviceinfo: \"\",\r\n          //   },\r\n          //   headers: {\r\n          //     Authorization: \"Basic dHJpZXVwdjpwaGFtdHJpZXU=\",\r\n          //   },\r\n          // }\r\n        );\r\n      if (result.data.AccessToken) {\r\n        await AsyncStorage.setItem(\r\n          \"userLogin\",\r\n          JSON.stringify({ ...result.data })\r\n        );\r\n      } else {\r\n        showMessage({ message: result.data.messenger, type: \"warning\", position: 'top' });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}