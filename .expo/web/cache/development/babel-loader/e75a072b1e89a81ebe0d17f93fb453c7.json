{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react\\\\SunhouseKTV\\\\screens\\\\DashBoard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { SearchBar } from 'react-native-elements';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { GetApis } from \"../Common/CallApi\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Ionicons } from '@expo/vector-icons';\nimport Theme from \"../constants/Theme\";\nimport Icon from \"../components/Icon\";\nimport { Button, Menu, Divider, Provider } from 'react-native-paper';\n\nvar DashBoard = function DashBoard(props) {\n  var navigation = useNavigation();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasks = _useState2[0],\n      setStaks = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cacheTasks = _useState4[0],\n      setCacheTasks = _useState4[1];\n\n  var isFocused = useIsFocused();\n  useEffect(function () {\n    if (isFocused) {\n      getTasks();\n    }\n\n    ;\n  }, [props, isFocused]);\n\n  var getTasks = function getTasks() {\n    var userLogin, userName;\n    return _regeneratorRuntime.async(function getTasks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('userLogin'));\n\n          case 3:\n            userLogin = _context.sent;\n            userName = '';\n            if (userLogin && JSON.parse(userLogin) != null) userName = JSON.parse(userLogin).UserName;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(GetApis('KPI', 'GetTaskAssignmentDashHome', {\n              username: userName,\n              taskType: 'SelfTask',\n              userlogin: userName\n            }, 10000).then(function (newres) {\n              if (newres && newres.ResponseStatus == 'OK') {\n                var data = newres.ResponseData.ResponseData;\n\n                if (data != undefined) {\n                  setStaks(data);\n                  setCacheTasks(data);\n                } else {\n                  setStaks([]);\n                }\n              } else {}\n            }));\n\n          case 8:\n            _context.next = 12;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var TaskOnPress = function TaskOnPress(item) {\n    navigation.navigate('Details', item);\n  };\n\n  var TaskItem = function TaskItem(_ref) {\n    var item = _ref.item,\n        style = _ref.style,\n        colorFlag = _ref.colorFlag;\n    return React.createElement(TouchableOpacity, {\n      style: [styles.item, style],\n      onPress: function onPress() {\n        return TaskOnPress(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 1\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 2,\n        flexDirection: 'row',\n        marginBottom: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        flex: 2,\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 52,\n        height: 52,\n        borderRadius: 52\n      },\n      source: {\n        uri: \"https://acc.sunhouse.com.vn/ProfilePictures/\" + item.ProfilePicture\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    })), React.createElement(View, {\n      style: {\n        flex: 9,\n        paddingLeft: 15,\n        paddingTop: 8\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: [{\n        marginBottom: 2\n      }, styles.title],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, item.ManagerUser, \" > \", item.PerformUser), React.createElement(Text, {\n      style: styles.textColor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, \"T\\u01B0\\u0300 \", item.disStartDate, \" - \", item.disEndDate, \" \")), React.createElement(View, {\n      style: ({\n        flex: 1,\n        paddingTop: 5\n      }, styles.textColor),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: {\n        zIndex: 1000,\n        width: 40,\n        height: 40,\n        alignItems: \"flex-end\"\n      },\n      onPress: function onPress() {\n        console.log(1);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, React.createElement(Ionicons, {\n      name: \"chevron-down\",\n      size: 20,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }), React.createElement(Menu, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, React.createElement(Menu.Item, {\n      onPress: function onPress() {},\n      title: \"Item 1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }), React.createElement(Menu.Item, {\n      onPress: function onPress() {},\n      title: \"Item 2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }))))), React.createElement(View, {\n      style: {\n        flex: 3,\n        marginLeft: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, React.createElement(Text, {\n      style: [styles.textColor, {\n        marginBottom: 10\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, item.TaskName), React.createElement(Text, {\n      style: [styles.textColor, styles.title, {\n        marginBottom: 10\n      }],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Tr\\u1EA1ng th\\xE1i: \", item.strTaskStatus), React.createElement(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'row'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        flex: 4,\n        marginBottom: 10,\n        color: getColorLeftDay(item.LeftDays)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, \" \", item.LeftDays, \" ng\\xE0y\"), React.createElement(View, {\n      style: {\n        flex: 1,\n        height: 22,\n        borderRadius: 10,\n        justifyContent: 'center',\n        backgroundColor: getColor(item.TaskType)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontWeight: 'bold',\n        textAlign: 'center',\n        borderRadius: 10,\n        fontSize: 11\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, item.TaskTypeName))))));\n  };\n\n  var getColorLeftDay = function getColorLeftDay(leftDay) {\n    if (leftDay >= 3) {\n      return Theme.COLORS.GREEN_PORTAL;\n    } else return 'red';\n  };\n\n  var getColor = function getColor(taskType) {\n    if (taskType == \"Commitment\") {\n      return Theme.COLORS.GREEN_PORTAL;\n    }\n\n    if (taskType == \"Nomal\") {\n      return \"#0275d8\";\n    }\n\n    if (taskType == \"Appointment\") {\n      return \"#f0ad4e\";\n    }\n\n    if (taskType == \"YearPlan\") {\n      return \"#5cb85c\";\n    } else return \"#adadad\";\n  };\n\n  var RenderItem = function RenderItem(_ref2) {\n    var item = _ref2.item;\n    item.colorFlag = '#0066ff';\n\n    var CaptureString = function CaptureString(str, character, numIndex) {\n      var ext = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"\";\n      return str.split(character).filter(function (a, i) {\n        return i <= numIndex - 1;\n      }).join(character) + ext;\n    };\n\n    switch (item.TaskStatus) {\n      case 'Fail':\n        item.colorFlag = 'red';\n        break;\n\n      case 'New':\n        item.colorFlag = 'orange';\n        break;\n\n      case 'Rejected':\n        item.colorFlag = 'yellow';\n        break;\n\n      case 'Complete':\n        item.colorFlag = 'green';\n        break;\n    }\n\n    item['ShortContent'] = CaptureString(item.TaskRequirement, \" \", 8, \"...\");\n    item['ProfilePicture'] = item.ProfilePicture == null ? 'trieupv.jpg' : item.ProfilePicture;\n    return React.createElement(TaskItem, {\n      item: item,\n      colorFlag: item.colorFlag,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: [styles.container],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: [styles.toptask, styles.viewPanel],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, React.createElement(SearchBar, {\n    placeholder: \"Nh\\u1EADp ti\\xEAu \\u0111\\u1EC1...\",\n    onChangeText: function onChangeText(value) {\n      var lstTasks = cacheTasks.filter(function (e) {\n        return e.TaskName.toLowerCase().indexOf(value.toLowerCase()) != -1 || e.PerformUser.toLowerCase().indexOf(value.toLowerCase()) != -1 || e.ManagerUser.toLowerCase().indexOf(value.toLowerCase()) != -1;\n      });\n      setStaks(lstTasks);\n    },\n    onClear: function onClear(e) {\n      setStaks(cacheTasks);\n    },\n    value: null,\n    lightTheme: true,\n    containerStyle: {\n      backgroundColor: '#fff',\n      padding: 2\n    },\n    inputStyle: {\n      height: 30,\n      fontSize: 14\n    },\n    inputContainerStyle: {\n      height: 30,\n      backgroundColor: 'white',\n      borderRadius: 20,\n      borderBottomWidth: 1,\n      borderColor: '#ededed',\n      borderWidth: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }), React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      paddingTop: 2,\n      paddingBottom: 2\n    },\n    data: tasks,\n    renderItem: RenderItem,\n    keyExtractor: function keyExtractor(item) {\n      return item.Id;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: styles.addButton,\n    onPress: function onPress() {\n      return navigation.navigate('AddTask');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"plus\",\n    family: \"AntDesign\",\n    size: 26,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default DashBoard;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    backgroundColor: \"#f2f2f2\"\n  },\n  viewPanel: {\n    borderRadius: 5,\n    opacity: 1\n  },\n  toptask: {\n    flex: 2\n  },\n  item: {\n    padding: 4,\n    marginHorizontal: 4,\n    marginVertical: 2,\n    marginBottom: 5,\n    backgroundColor: 'white',\n    borderRadius: 5\n  },\n  textTaskName: {\n    fontSize: 15\n  },\n  title: _objectSpread(_objectSpread({\n    flexShrink: 1,\n    flexWrap: \"wrap\",\n    color: \"#8c8c8c\"\n  }, Platform.select({\n    android: {\n      fontSize: 13\n    },\n    ios: {\n      fontSize: 15\n    }\n  })), {}, {\n    fontWeight: 'bold'\n  }),\n  textColor: {\n    color: \"#8c8c8c\"\n  },\n  addButton: {\n    position: 'absolute',\n    zIndex: 11,\n    right: 20,\n    bottom: 30,\n    backgroundColor: Theme.COLORS.BLUETASK,\n    width: 60,\n    height: 60,\n    borderRadius: 35,\n    alignItems: 'center',\n    justifyContent: 'center',\n    elevation: 8\n  },\n  addButtonText: {\n    color: '#fff',\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["D:/react/SunhouseKTV/screens/DashBoard.js"],"names":["React","useState","useEffect","useIsFocused","useNavigation","SearchBar","AsyncStorage","GetApis","ScrollView","Ionicons","Theme","Icon","Button","Menu","Divider","Provider","DashBoard","props","navigation","tasks","setStaks","cacheTasks","setCacheTasks","isFocused","getTasks","getItem","userLogin","userName","JSON","parse","UserName","username","taskType","userlogin","then","newres","ResponseStatus","data","ResponseData","undefined","TaskOnPress","item","navigate","TaskItem","style","colorFlag","styles","flex","flexDirection","marginBottom","justifyContent","alignItems","width","height","borderRadius","uri","ProfilePicture","paddingLeft","paddingTop","title","ManagerUser","PerformUser","textColor","disStartDate","disEndDate","zIndex","console","log","marginLeft","TaskName","strTaskStatus","color","getColorLeftDay","LeftDays","backgroundColor","getColor","TaskType","fontWeight","textAlign","fontSize","TaskTypeName","leftDay","COLORS","GREEN_PORTAL","RenderItem","CaptureString","str","character","numIndex","ext","split","filter","a","i","join","TaskStatus","TaskRequirement","container","toptask","viewPanel","value","lstTasks","e","toLowerCase","indexOf","padding","borderBottomWidth","borderColor","borderWidth","paddingBottom","Id","addButton","StyleSheet","create","opacity","marginHorizontal","marginVertical","textTaskName","flexShrink","flexWrap","Platform","select","android","ios","position","right","bottom","BLUETASK","elevation","addButtonText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useIsFocused, useNavigation } from '@react-navigation/native';\r\nimport { SearchBar } from 'react-native-elements';\r\nimport { StyleSheet, Image, Text, TouchableOpacity, View, AsyncStorage, FlatList, Alert } from \"react-native\";\r\nimport { GetApis } from '../Common/CallApi';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport Theme from \"../constants/Theme\";\r\nimport Icon from \"../components/Icon\";\r\nimport { Button, Menu, Divider, Provider } from 'react-native-paper';\r\n\r\n\r\n\r\nconst DashBoard = (props) => {\r\n    const navigation = useNavigation();\r\n    const [tasks, setStaks] = useState([]);\r\n    const [cacheTasks, setCacheTasks] = useState([]);\r\n    const isFocused = useIsFocused();\r\n\r\n    useEffect(() => {\r\n        if (isFocused) {\r\n            getTasks();\r\n        };\r\n    }, [props, isFocused]);\r\n\r\n    const getTasks = async () => {\r\n        try {\r\n            var userLogin = await AsyncStorage.getItem('userLogin');\r\n            var userName = '';\r\n            if (userLogin && JSON.parse(userLogin) != null)\r\n                userName = JSON.parse(userLogin).UserName;\r\n            await GetApis('KPI', 'GetTaskAssignmentDashHome',\r\n                {\r\n                    username: userName,\r\n                    taskType: 'SelfTask',\r\n                    userlogin: userName,\r\n                },\r\n                10000\r\n            ).then((newres) => {\r\n                if (newres && newres.ResponseStatus == 'OK') {\r\n                    const data = newres.ResponseData.ResponseData;\r\n                    if (data != undefined) {\r\n                        setStaks(data);\r\n                        setCacheTasks(data);\r\n                    } else { setStaks([]); }\r\n                } else {\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Click vào 1 dòng công việc\r\n     * @param {*} item \r\n     */\r\n    const TaskOnPress = (item) => {\r\n        navigation.navigate('Details', item);\r\n    }\r\n\r\n    const TaskItem = ({ item, style, colorFlag }) => (\r\n        <TouchableOpacity style={[styles.item, style]} onPress={() => TaskOnPress(item)}>\r\n            <View style={{ flex: 1 }}>\r\n                <View style={{ flex: 2, flexDirection: 'row', marginBottom: 10 }}>\r\n                    <View style={{ flex: 2, justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Image\r\n                            style={{ width: 52, height: 52, borderRadius: 52 }}\r\n                            source={{ uri: `https://acc.sunhouse.com.vn/ProfilePictures/${item.ProfilePicture}` }}\r\n                        />\r\n                    </View>\r\n                    <View style={{ flex: 9, paddingLeft: 15, paddingTop: 8 }}>\r\n                        <Text style={[{ marginBottom: 2 }, styles.title]}>{item.ManagerUser} > {item.PerformUser}</Text>\r\n                        <Text style={styles.textColor}>Từ {item.disStartDate} - {item.disEndDate} </Text>\r\n                        {/* <Text style={styles.textColor}>{item.TaskTypeName}</Text> */}\r\n                    </View>\r\n                    <View style={{ flex: 1, paddingTop: 5 }, styles.textColor}>\r\n                        <TouchableOpacity style={{ zIndex: 1000, width: 40, height: 40, alignItems: \"flex-end\" }} onPress={() => { console.log(1); }}>\r\n                            <Ionicons name=\"chevron-down\" size={20} color=\"black\" />\r\n                            <Menu>\r\n                                <Menu.Item onPress={() => {}} title=\"Item 1\" />\r\n                                <Menu.Item onPress={() => {}} title=\"Item 2\" />\r\n                            </Menu>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n                <View style={{ flex: 3, marginLeft: 5 }}>\r\n                    <Text style={[styles.textColor, { marginBottom: 10, }]}>{item.TaskName}</Text>\r\n                    {/* <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <FontAwesome name=\"sun-o\" size={24} style={styles.textColor} />\r\n                        <Text style={[styles.textColor, { marginTop: 4, marginLeft: 10, marginBottom: 15 }]}>{getFollowUser(item.FollowUser)}</Text>\r\n                    </View> */}\r\n                    <Text style={[styles.textColor, styles.title, { marginBottom: 10 }]}>Trạng thái: {item.strTaskStatus}</Text>\r\n                    <View style={{ flex: 1, flexDirection: 'row' }}>\r\n                        <Text style={{ flex: 4, marginBottom: 10, color: getColorLeftDay(item.LeftDays) }}> {item.LeftDays} ngày</Text>\r\n                        <View style={{ flex: 1, height: 22, borderRadius: 10, justifyContent: 'center', backgroundColor: getColor(item.TaskType) }}>\r\n                            <Text style={{ color: 'white', fontWeight: 'bold', textAlign: 'center', borderRadius: 10, fontSize: 11 }}>{item.TaskTypeName}</Text>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n    // thay đổi màu chữ theo thời gian làm việc còn hạn hay hết hạn\r\n    var getColorLeftDay = (leftDay) => {\r\n        if (leftDay >= 3) {\r\n            return Theme.COLORS.GREEN_PORTAL;\r\n        }\r\n        else return 'red';\r\n    }\r\n    //thay đổi màu nền button mức độ công việc\r\n    var getColor = (taskType) => {\r\n        if (taskType == \"Commitment\") {\r\n            return Theme.COLORS.GREEN_PORTAL;\r\n        }\r\n        if (taskType == \"Nomal\") {\r\n            return \"#0275d8\";\r\n        }\r\n        if (taskType == \"Appointment\") {\r\n            return \"#f0ad4e\";\r\n        }\r\n        if (taskType == \"YearPlan\") {\r\n            return \"#5cb85c\";\r\n        }\r\n        else return \"#adadad\";\r\n    }\r\n    const RenderItem = ({ item }) => {\r\n        //console.log(JSON.stringify(item));\r\n        item.colorFlag = '#0066ff';\r\n        const CaptureString = (str, character, numIndex, ext = \"\") => {\r\n            return str.split(character).filter((a, i) => i <= numIndex - 1).join(character) + ext;\r\n        }\r\n\r\n        switch (item.TaskStatus) {\r\n            case 'Fail': item.colorFlag = 'red'; break;\r\n            case 'New': item.colorFlag = 'orange'; break;\r\n            case 'Rejected': item.colorFlag = 'yellow'; break;\r\n            case 'Complete': item.colorFlag = 'green'; break;\r\n        }\r\n        item['ShortContent'] = CaptureString(item.TaskRequirement, \" \", 8, \"...\");\r\n        item['ProfilePicture'] = item.ProfilePicture == null ? 'trieupv.jpg' : item.ProfilePicture\r\n        return (\r\n            <TaskItem\r\n                item={item}\r\n                colorFlag={item.colorFlag}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <View style={[styles.container]}>\r\n            <View style={[styles.toptask, styles.viewPanel]}>\r\n                <SearchBar\r\n                    placeholder=\"Nhập tiêu đề...\"\r\n                    onChangeText={(value) => {\r\n                        var lstTasks = cacheTasks.filter(e =>\r\n                            e.TaskName.toLowerCase().indexOf(value.toLowerCase()) != -1\r\n                            || e.PerformUser.toLowerCase().indexOf(value.toLowerCase()) != -1\r\n                            || e.ManagerUser.toLowerCase().indexOf(value.toLowerCase()) != -1);\r\n                        //console.log(1);\r\n                        setStaks(lstTasks);\r\n                    }}\r\n                    onClear={(e) => {\r\n                        //  console.log(2);\r\n                        setStaks(cacheTasks);\r\n                    }}\r\n                    value={null}\r\n                    lightTheme={true}\r\n                    containerStyle={{ backgroundColor: '#fff', padding: 2 }}\r\n                    inputStyle={{ height: 30, fontSize: 14 }}\r\n                    inputContainerStyle={{ height: 30, backgroundColor: 'white', borderRadius: 20, borderBottomWidth: 1, borderColor: '#ededed', borderWidth: 1 }}\r\n                />\r\n                <ScrollView>\r\n                    <FlatList\r\n                        style={{ paddingTop: 2, paddingBottom: 2 }}\r\n                        data={tasks}\r\n                        renderItem={RenderItem}\r\n                        keyExtractor={(item) => item.Id}\r\n                    />\r\n                </ScrollView>\r\n            </View>\r\n            <TouchableOpacity style={styles.addButton} onPress={() => navigation.navigate('AddTask')}>\r\n                <Icon\r\n                    name=\"plus\"\r\n                    family=\"AntDesign\"\r\n                    size={26}\r\n                    color=\"white\"\r\n                />\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nexport default DashBoard;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        backgroundColor: \"#f2f2f2\"\r\n    },\r\n    viewPanel: {\r\n        borderRadius: 5,\r\n        opacity: 1\r\n    },\r\n    toptask: {\r\n        flex: 2,\r\n    },\r\n    //Draw item\r\n    item: {\r\n        padding: 4,\r\n        marginHorizontal: 4,\r\n        marginVertical: 2,\r\n        marginBottom: 5,\r\n        backgroundColor: 'white',\r\n        borderRadius: 5,\r\n    },\r\n    textTaskName: {\r\n        fontSize: 15\r\n    },\r\n    title: {\r\n        flexShrink: 1,\r\n        flexWrap: \"wrap\",\r\n        color: \"#8c8c8c\",\r\n        ...Platform.select({\r\n            android: {\r\n                fontSize: 13,\r\n            },\r\n            ios: {\r\n                fontSize: 15,\r\n            }\r\n        }),\r\n        fontWeight: 'bold'\r\n    },\r\n    textColor: {\r\n        color: \"#8c8c8c\",\r\n    },\r\n    addButton: {\r\n        position: 'absolute',\r\n        zIndex: 11,\r\n        right: 20,\r\n        bottom: 30,\r\n        backgroundColor: Theme.COLORS.BLUETASK,\r\n        width: 60,\r\n        height: 60,\r\n        borderRadius: 35,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        elevation: 8,\r\n    },\r\n    addButtonText: {\r\n        color: '#fff',\r\n        fontSize: 18\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}