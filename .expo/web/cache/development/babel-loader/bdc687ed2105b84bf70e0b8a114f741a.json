{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { PlatformColor } from \"react-native-web/dist/index\";\nimport { TextPropTypes } from \"react-native-web/dist/index\";\nimport useTheme from \"./useTheme\";\n\nvar DialogTitle = function DialogTitle(props) {\n  var style = props.style,\n      children = props.children,\n      nodeProps = __rest(props, [\"style\", \"children\"]);\n\n  var _useTheme = useTheme(buildStyles),\n      styles = _useTheme.styles;\n\n  return React.createElement(Text, _extends({\n    style: [styles.text, style]\n  }, nodeProps), children);\n};\n\nDialogTitle.propTypes = _extends(_extends({}, TextPropTypes), {\n  style: PropTypes.any,\n  children: PropTypes.string.isRequired\n});\nDialogTitle.displayName = \"DialogTitle\";\n\nvar buildStyles = function buildStyles(isDark) {\n  return StyleSheet.create({\n    text: Platform.select({\n      ios: {\n        color: PlatformColor(\"label\"),\n        textAlign: \"center\",\n        fontSize: 18,\n        fontWeight: \"600\"\n      },\n      android: {\n        color: PlatformColor(\"@android:color/\" + (isDark ? \"primary_text_dark\" : \"primary_text_light\")),\n        fontWeight: \"500\",\n        fontSize: 18\n      },\n      web: {\n        fontWeight: \"500\",\n        fontSize: 18\n      },\n      default: {}\n    })\n  });\n};\n\nexport default DialogTitle;","map":{"version":3,"sources":["D:/react/SunhouseKTV/node_modules/react-native-dialog/lib/Title.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","PropTypes","React","PlatformColor","TextPropTypes","useTheme","DialogTitle","props","style","children","nodeProps","buildStyles","styles","createElement","Text","text","propTypes","any","string","isRequired","displayName","isDark","StyleSheet","create","Platform","select","ios","color","textAlign","fontSize","fontWeight","android","web","default"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport PropTypes from \"prop-types\";\nimport * as React from \"react\";\nimport { Platform, StyleSheet, Text, PlatformColor, TextPropTypes, } from \"react-native\";\nimport useTheme from \"./useTheme\";\nconst DialogTitle = (props) => {\n    const { style, children } = props, nodeProps = __rest(props, [\"style\", \"children\"]);\n    const { styles } = useTheme(buildStyles);\n    return (React.createElement(Text, Object.assign({ style: [styles.text, style] }, nodeProps), children));\n};\nDialogTitle.propTypes = Object.assign(Object.assign({}, TextPropTypes), { style: PropTypes.any, children: PropTypes.string.isRequired });\nDialogTitle.displayName = \"DialogTitle\";\nconst buildStyles = (isDark) => StyleSheet.create({\n    text: Platform.select({\n        ios: {\n            color: PlatformColor(\"label\"),\n            textAlign: \"center\",\n            fontSize: 18,\n            fontWeight: \"600\",\n        },\n        android: {\n            color: PlatformColor(`@android:color/${isDark ? \"primary_text_dark\" : \"primary_text_light\"}`),\n            fontWeight: \"500\",\n            fontSize: 18,\n        },\n        web: {\n            fontWeight: \"500\",\n            fontSize: 18,\n        },\n        default: {},\n    }),\n});\nexport default DialogTitle;\n"]},"metadata":{},"sourceType":"module"}