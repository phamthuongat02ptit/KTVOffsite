{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react\\\\SunhouseKTV\\\\navigation\\\\Screens.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { MaterialCommunityIcons, Ionicons, AntDesign, MaterialIcons } from \"@expo/vector-icons\";\nimport { getFocusedRouteNameFromRoute, useIsFocused } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { SHCss } from \"../Common/SHCss\";\nimport Punis from \"../screens/Punis\";\nimport Bonus from \"../screens/Bonus\";\nimport ProfileTab from \"../screens/ProfileTab\";\nimport AddTask from \"../screens/AddTask\";\nimport DashBoard from \"../screens/DashBoard\";\nimport RootStackScreen from \"../screens/RootStackScreen\";\nimport Timekeeping from \"../screens/Timekeeping\";\nimport WaitingToReceive from \"../screens/WaitingToReceive\";\nimport Received from \"../screens/Received\";\nimport Processing from \"../screens/Processing\";\nimport PartsRequest from \"../screens/PartsRequest\";\nimport RequestReturn from \"../screens/RequestReturn\";\nimport PartsRequestReturn from \"../screens/PartsRequestReturn\";\nimport Statistical from \"../screens/Statistical\";\nimport Inventory from \"../screens/Inventory\";\nimport CustomDrawerContent from \"./Menu\";\nimport Theme from \"../constants/Theme\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar HomeTabBar = function HomeTabBar(props) {\n  var isFocused = useIsFocused();\n  useEffect(function () {\n    if (isFocused) {}\n  }, [props, isFocused]);\n  return React.createElement(View, {\n    style: [SHCss.container],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, React.createElement(DashBoard, {\n    tabLabel: {\n      label: \"Cá nhân\",\n      fontSize: 9,\n      fontWeight: \"bold\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar HomeTab = function HomeTab(props) {\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"HomeTabBar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"HomeTabBar\",\n    component: HomeTabBar,\n    options: {\n      title: \"Trang chủ\",\n      headerLeft: function headerLeft() {\n        return React.createElement(TouchableOpacity, {\n          style: {\n            marginHorizontal: 10\n          },\n          onPress: function onPress() {\n            return props.navigation.navigate(\"HomeTab\");\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }\n        }, React.createElement(Ionicons, {\n          name: \"ios-menu\",\n          size: 30,\n          color: \"white\",\n          onPress: function onPress() {\n            return props.navigation.openDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }\n        }));\n      },\n      headerStyle: {\n        backgroundColor: Theme.COLORS.GREEN_PORTAL\n      },\n      headerTitleAlign: \"center\",\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AddTask\",\n    component: AddTask,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n};\n\nfunction HomeTabBottom(props) {\n  var _this2 = this;\n\n  return React.createElement(Tab.Navigator, {\n    activeColor: \"#f0edf6\",\n    inactiveColor: \"#3e2465\",\n    barStyle: {\n      backgroundColor: '#694fad'\n    },\n    tabBarOptions: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"HomeTab\",\n    component: HomeTab,\n    options: function options(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarLabel: 'Trang chủ',\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var color = _ref2.color,\n              size = _ref2.size;\n          return React.createElement(MaterialCommunityIcons, {\n            name: \"home\",\n            color: color,\n            size: size,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }\n          });\n        },\n        tabBarVisible: function (route) {\n          var _getFocusedRouteNameF;\n\n          var routeName = (_getFocusedRouteNameF = getFocusedRouteNameFromRoute(route)) != null ? _getFocusedRouteNameF : \"\";\n\n          if (routeName === \"AddTask\") {\n            return false;\n          }\n\n          return true;\n        }(route)\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ProfileTab\",\n    component: ProfileTab,\n    options: {\n      tabBarLabel: \"Hồ sơ\",\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"account-tie-outline\",\n          color: color,\n          size: size,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Bonus\",\n    component: Bonus,\n    options: {\n      tabBarLabel: 'Tặng sao',\n      tabBarButton: function tabBarButton() {\n        return null;\n      },\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color,\n            size = _ref4.size;\n        return React.createElement(Ionicons, {\n          name: \"md-star-outline\",\n          color: color,\n          size: size,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Punis\",\n    visible: \"false\",\n    component: Punis,\n    options: {\n      tabBarLabel: \"Bắt 360\",\n      tabBarColor: \"#009387\",\n      tabBarButton: function tabBarButton() {\n        return null;\n      },\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color,\n            size = _ref5.size;\n        return React.createElement(MaterialCommunityIcons, {\n          name: \"emoticon-angry-outline\",\n          color: color,\n          size: size,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function LoginStack(props) {\n  return React.createElement(Stack.Navigator, {\n    mode: \"card\",\n    headerMode: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"RootStackScreen\",\n    component: RootStackScreen,\n    option: {\n      headerTransparent: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"App\",\n    component: AppStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction AppStack(props) {\n  var _this3 = this;\n\n  return React.createElement(Drawer.Navigator, {\n    style: {\n      flex: 1\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, _extends({}, props, {\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 33\n        }\n      }));\n    },\n    drawerStyle: {\n      backgroundColor: \"white\",\n      width: width * 0.8\n    },\n    drawerContentOptions: {\n      activeTintcolor: \"white\",\n      inactiveTintColor: \"#000\",\n      activeBackgroundColor: \"transparent\",\n      itemStyle: {\n        width: width * 0.75,\n        backgroundColor: \"transparent\",\n        paddingVertical: 16,\n        paddingHorizonal: 12,\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        overflow: \"hidden\"\n      },\n      labelStyle: {\n        fontSize: 18,\n        marginLeft: 12,\n        fontWeight: \"normal\"\n      }\n    },\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeTabBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  iconStyle: {\n    fontSize: 40,\n    marginTop: 30,\n    color: \"black\"\n  }\n});","map":{"version":3,"sources":["D:/react/SunhouseKTV/navigation/Screens.js"],"names":["React","useEffect","useState","MaterialCommunityIcons","Ionicons","AntDesign","MaterialIcons","getFocusedRouteNameFromRoute","useIsFocused","createStackNavigator","createDrawerNavigator","createBottomTabNavigator","SHCss","Punis","Bonus","ProfileTab","AddTask","DashBoard","RootStackScreen","Timekeeping","WaitingToReceive","Received","Processing","PartsRequest","RequestReturn","PartsRequestReturn","Statistical","Inventory","CustomDrawerContent","Theme","Dimensions","get","width","Stack","Drawer","Tab","HomeTabBar","props","isFocused","container","label","fontSize","fontWeight","HomeTab","title","headerLeft","marginHorizontal","navigation","navigate","openDrawer","headerStyle","backgroundColor","COLORS","GREEN_PORTAL","headerTitleAlign","headerTintColor","headerTitleStyle","headerShown","HomeTabBottom","route","tabBarLabel","tabBarIcon","color","size","tabBarVisible","routeName","tabBarButton","tabBarColor","LoginStack","headerTransparent","AppStack","flex","activeTintcolor","inactiveTintColor","activeBackgroundColor","itemStyle","paddingVertical","paddingHorizonal","justifyContent","alignContent","alignItems","overflow","labelStyle","marginLeft","styles","StyleSheet","create","iconStyle","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n  View,\r\n  Text,\r\n} from \"react-native\";\r\nimport { MaterialCommunityIcons, Ionicons, AntDesign, MaterialIcons } from \"@expo/vector-icons\";\r\nimport { getFocusedRouteNameFromRoute, useIsFocused } from \"@react-navigation/native\";\r\n\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { SHCss } from \"../Common/SHCss\";\r\n\r\n// screens\r\nimport Punis from \"../screens/Punis\";\r\nimport Bonus from \"../screens/Bonus\";\r\nimport ProfileTab from \"../screens/ProfileTab\";\r\nimport AddTask from \"../screens/AddTask\";\r\nimport DashBoard from \"../screens/DashBoard\";\r\nimport RootStackScreen from \"../screens/RootStackScreen\";\r\n//man hinh ktv\r\nimport Timekeeping from \"../screens/Timekeeping\";\r\nimport WaitingToReceive from \"../screens/WaitingToReceive\";\r\nimport Received from \"../screens/Received\";\r\nimport Processing from \"../screens/Processing\";\r\nimport PartsRequest from \"../screens/PartsRequest\";\r\nimport RequestReturn from \"../screens/RequestReturn\";\r\nimport PartsRequestReturn from \"../screens/PartsRequestReturn\";\r\nimport Statistical from \"../screens/Statistical\";\r\nimport Inventory from \"../screens/Inventory\";\r\n\r\n// drawer\r\nimport CustomDrawerContent from \"./Menu\";\r\n\r\n// header for screens\r\nimport Theme from \"../constants/Theme\";\r\n\r\nconst { width } = Dimensions.get(\"screen\");\r\n\r\nconst Stack = createStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst HomeTabBar = (props) => {\r\n  const isFocused = useIsFocused();\r\n  useEffect(() => {\r\n    if (isFocused) {\r\n    }\r\n  }, [props, isFocused]);\r\n\r\n  return (\r\n    <View style={[SHCss.container]}>\r\n      <DashBoard\r\n        tabLabel={{ label: \"Cá nhân\", fontSize: 9, fontWeight: \"bold\" }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst HomeTab = (props) => {\r\n\r\n  return (\r\n    <Stack.Navigator initialRouteName=\"HomeTabBar\">\r\n      <Stack.Screen\r\n        name=\"HomeTabBar\"\r\n        component={HomeTabBar}\r\n        options={{\r\n          title: \"Trang chủ\",\r\n          headerLeft: () => (\r\n            <TouchableOpacity\r\n              style={{ marginHorizontal: 10 }}\r\n              onPress={() => props.navigation.navigate(\"HomeTab\")}\r\n            >\r\n              <Ionicons\r\n                name=\"ios-menu\"\r\n                size={30}\r\n                color=\"white\"\r\n                onPress={() => props.navigation.openDrawer()}\r\n              />\r\n            </TouchableOpacity>\r\n          ),\r\n          headerStyle: {\r\n            backgroundColor: Theme.COLORS.GREEN_PORTAL,\r\n          },\r\n          headerTitleAlign: \"center\",\r\n          headerTintColor: \"#fff\",\r\n          headerTitleStyle: {\r\n            fontWeight: \"bold\",\r\n          },\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"AddTask\"\r\n        component={AddTask}\r\n        options={{\r\n          headerShown:false,\r\n        }} />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\nfunction HomeTabBottom(props) {\r\n  return (\r\n    <Tab.Navigator\r\n      activeColor=\"#f0edf6\"\r\n      inactiveColor=\"#3e2465\"\r\n      barStyle={{ backgroundColor: '#694fad' }}\r\n      tabBarOptions={{\r\n      }}>\r\n      <Tab.Screen\r\n        name=\"HomeTab\"\r\n        component={HomeTab} \r\n        options={({ route }) => ({\r\n          tabBarLabel: 'Trang chủ',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons name=\"home\" color={color} size={size} />\r\n          ),\r\n          tabBarVisible: ((route) => {\r\n              const routeName = getFocusedRouteNameFromRoute(route) ?? \"\"\r\n  \r\n              if (routeName === \"AddTask\") {\r\n                  return false\r\n              }\r\n  \r\n              return true\r\n          })(route),\r\n      })}\r\n      />\r\n      <Tab.Screen\r\n        name=\"ProfileTab\"\r\n        component={ProfileTab}\r\n        options={{\r\n          tabBarLabel: \"Hồ sơ\",\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"account-tie-outline\"\r\n              color={color}\r\n              size={size}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Bonus\"\r\n        component={Bonus}\r\n        options={{\r\n          tabBarLabel: 'Tặng sao',\r\n          tabBarButton: () => null,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"md-star-outline\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Punis\"\r\n        visible=\"false\"\r\n        component={Punis}\r\n        options={{\r\n          tabBarLabel: \"Bắt 360\",\r\n          tabBarColor: \"#009387\",\r\n          tabBarButton: () => null,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <MaterialCommunityIcons\r\n              name=\"emoticon-angry-outline\"\r\n              color={color}\r\n              size={size}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nexport default function LoginStack(props) {\r\n  return (\r\n    <Stack.Navigator mode=\"card\" headerMode=\"none\">\r\n      <Stack.Screen\r\n        name=\"RootStackScreen\"\r\n        component={RootStackScreen}\r\n        option={{\r\n          headerTransparent: true,\r\n        }}\r\n      />\r\n      <Stack.Screen name=\"App\" component={AppStack} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nfunction AppStack(props) {\r\n  return (\r\n    <Drawer.Navigator\r\n      style={{ flex: 1 }}\r\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\r\n      drawerStyle={{\r\n        backgroundColor: \"white\",\r\n        width: width * 0.8,\r\n      }}\r\n      drawerContentOptions={{\r\n        activeTintcolor: \"white\",\r\n        inactiveTintColor: \"#000\",\r\n        activeBackgroundColor: \"transparent\",\r\n        itemStyle: {\r\n          width: width * 0.75,\r\n          backgroundColor: \"transparent\",\r\n          paddingVertical: 16,\r\n          paddingHorizonal: 12,\r\n          justifyContent: \"center\",\r\n          alignContent: \"center\",\r\n          alignItems: \"center\",\r\n          overflow: \"hidden\",\r\n        },\r\n        labelStyle: {\r\n          fontSize: 18,\r\n          marginLeft: 12,\r\n          fontWeight: \"normal\",\r\n        },\r\n      }}\r\n      initialRouteName=\"Home\"\r\n    >\r\n      <Drawer.Screen name=\"Home\" component={HomeTabBottom} />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  iconStyle: {\r\n    fontSize: 40,\r\n    marginTop: 30,\r\n    color: \"black\",\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}