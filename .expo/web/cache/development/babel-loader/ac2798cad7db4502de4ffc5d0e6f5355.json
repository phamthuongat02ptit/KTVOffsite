{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport config from \"../Config/appsetting\";\n\nvar GetApis = function GetApis(controller, action, params, timeout) {\n  var res, data;\n  return _regeneratorRuntime.async(function GetApis$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(config.APIHOST + \"/api/\" + controller + \"/\" + action, {\n            baseURL: config.APIHOST + \"/api/\",\n            timeout: timeout,\n            headers: {\n              'cache-control': 'no-cache',\n              'Authorization': config.Authorization,\n              'Access-Control-Allow-Origin': '*'\n            },\n            params: params\n          }));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.data);\n\n        case 6:\n          data = _context.sent;\n\n          if (!(data == undefined)) {\n            _context.next = 11;\n            break;\n          }\n\n          return _context.abrupt(\"return\", \"error get\");\n\n        case 11:\n          return _context.abrupt(\"return\", data);\n\n        case 12:\n          _context.next = 17;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 14]], Promise);\n};\n\nvar PostApis = function PostApis(controller, action, params, bodys, timeout) {\n  var res, data;\n  return _regeneratorRuntime.async(function PostApis$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(config.APIHOST + \"/api/\" + controller + \"/\" + action, {\n            baseURL: config.APIHOST + \"/api/\",\n            timeout: timeout,\n            headers: {\n              'cache-control': 'no-cache',\n              'Authorization': config.Authorization,\n              'Access-Control-Allow-Origin': '*'\n            },\n            params: params\n          }));\n\n        case 3:\n          res = _context2.sent;\n          _context2.next = 6;\n          return _regeneratorRuntime.awrap(res.data);\n\n        case 6:\n          data = _context2.sent;\n\n          if (!(data == undefined)) {\n            _context2.next = 11;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", \"error get\");\n\n        case 11:\n          return _context2.abrupt(\"return\", data);\n\n        case 12:\n          _context2.next = 17;\n          break;\n\n        case 14:\n          _context2.prev = 14;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", _context2.t0);\n\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 14]], Promise);\n};\n\nexport { GetApis, PostApis };","map":{"version":3,"sources":["D:/react/SunhouseKTV/Common/CallApi.js"],"names":["axios","config","GetApis","controller","action","params","timeout","get","APIHOST","baseURL","headers","Authorization","res","data","undefined","PostApis","bodys"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;;AAIA,IAAIC,OAAO,GAAG,SAAVA,OAAU,CAAOC,UAAP,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEUN,KAAK,CAACO,GAAN,CAAaN,MAAM,CAACO,OAApB,aAAmCL,UAAnC,SAAiDC,MAAjD,EAA2D;AACvEK,YAAAA,OAAO,EAAKR,MAAM,CAACO,OAAZ,UADgE;AAEvEF,YAAAA,OAAO,EAAEA,OAF8D;AAGvEI,YAAAA,OAAO,EAAE;AACL,+BAAiB,UADZ;AAEL,+BAAiBT,MAAM,CAACU,aAFnB;AAGL,6CAA+B;AAH1B,aAH8D;AAQvEN,YAAAA,MAAM,EAAEA;AAR+D,WAA3D,CAFV;;AAAA;AAEFO,UAAAA,GAFE;AAAA;AAAA,2CAYWA,GAAG,CAACC,IAZf;;AAAA;AAYFA,UAAAA,IAZE;;AAAA,gBAaFA,IAAI,IAAIC,SAbN;AAAA;AAAA;AAAA;;AAAA,2CAcK,WAdL;;AAAA;AAAA,2CAiBKD,IAjBL;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;AAyBA,IAAIE,QAAQ,GAAG,SAAXA,QAAW,CAAOZ,UAAP,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAkCW,KAAlC,EAAyCV,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAESN,KAAK,CAACO,GAAN,CAAaN,MAAM,CAACO,OAApB,aAAmCL,UAAnC,SAAiDC,MAAjD,EAA2D;AACvEK,YAAAA,OAAO,EAAKR,MAAM,CAACO,OAAZ,UADgE;AAEvEF,YAAAA,OAAO,EAAEA,OAF8D;AAGvEI,YAAAA,OAAO,EAAE;AACL,+BAAiB,UADZ;AAEL,+BAAiBT,MAAM,CAACU,aAFnB;AAGL,6CAA+B;AAH1B,aAH8D;AAQvEN,YAAAA,MAAM,EAAEA;AAR+D,WAA3D,CAFT;;AAAA;AAEHO,UAAAA,GAFG;AAAA;AAAA,2CAaUA,GAAG,CAACC,IAbd;;AAAA;AAaHA,UAAAA,IAbG;;AAAA,gBAcHA,IAAI,IAAIC,SAdL;AAAA;AAAA;AAAA;;AAAA,4CAeI,WAfJ;;AAAA;AAAA,4CAkBID,IAlBJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAf;;AAuBA,SAASX,OAAT,EAAkBa,QAAlB","sourcesContent":["import axios from 'axios';\r\nimport config from '../Config/appsetting';\r\n\r\n//Lấy dữ liệu\r\n//DUOCNC 20210623\r\nlet GetApis = async (controller, action, params, timeout) => {\r\n    try {\r\n        let res = await axios.get(`${config.APIHOST}/api/${controller}/${action}`, {\r\n            baseURL: `${config.APIHOST}/api/`,\r\n            timeout: timeout,\r\n            headers: {\r\n                'cache-control': 'no-cache',\r\n                'Authorization': config.Authorization,\r\n                'Access-Control-Allow-Origin': '*',\r\n            },\r\n            params: params\r\n        });\r\n        let data = await res.data;\r\n        if (data == undefined) {\r\n            return \"error get\";\r\n        }\r\n        else\r\n            return data;\r\n    } catch (error) {\r\n        return error\r\n    }\r\n};\r\n\r\n//Đẩy dữ liệu\r\n//DUOCNC 20210623\r\nlet PostApis = async (controller, action, params,bodys, timeout) => {\r\n    try { \r\n        let res = await axios.get(`${config.APIHOST}/api/${controller}/${action}`, {\r\n            baseURL: `${config.APIHOST}/api/`,\r\n            timeout: timeout,\r\n            headers: {\r\n                'cache-control': 'no-cache',\r\n                'Authorization': config.Authorization,\r\n                'Access-Control-Allow-Origin': '*',\r\n            },\r\n            params: params,\r\n            // data: bodys\r\n        });\r\n        let data = await res.data;\r\n        if (data == undefined) {\r\n            return \"error get\";\r\n        }\r\n        else\r\n            return data;\r\n    } catch (error) {\r\n        return error\r\n    }\r\n};\r\nexport { GetApis, PostApis };"]},"metadata":{},"sourceType":"module"}