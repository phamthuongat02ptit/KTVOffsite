{"version":3,"sources":["index.tsx"],"names":["React","useState","useRef","useEffect","TextInput","Surface","Divider","HelperText","Searchbar","Text","Provider","PaperProvider","useTheme","View","Dimensions","Platform","SectionList","ActivityIndicator","Modal","Lo","Item","defaultDropdownProps","ITEMLAYOUT","styles","deviceWidth","deviceHeight","EmptyList","PressableTouch","GroupDropdown","props","error","value","label","required","disabled","data","onChange","floating","enableSearch","primaryColor","elevation","borderRadius","activityIndicatorColor","searchPlaceholder","helperText","errorColor","itemTextStyle","itemContainerStyle","showLoader","animationIn","animationOut","supportedOrientations","animationInTiming","animationOutTiming","headerTextStyle","headerContainerStyle","stickySectionHeadersEnabled","parentDDContainerStyle","rippleColor","emptyListText","enableAvatar","avatarSize","onBlur","paperTheme","textInputStyle","mainContainerStyle","underlineColor","disableSelectionTick","selectedItemTextStyle","selectedItemViewStyle","removeLabel","mode","disabledItemTextStyle","disabledItemViewStyle","dropdownIcon","dropdownIconSize","itemSelectIcon","itemSelectIconSize","multiline","searchInputTheme","colors","selected","setSelected","labelv","setlabelV","isVisible","setIsVisible","iconColor","setIconColor","options","setOptions","hasError","setError","singluarData","setSingularData","contMeasure","setConMeasure","vx","vy","vWidth","vHeight","dimension","setDimension","dw","dh","searchQuery","setSearchQuery","pViewRef","listRef","addEventListener","width","height","get","removeEventListener","destructuredData","forEach","d","dv","push","isEmpty","lFilter","filter","current","flashScrollIndicators","secionIndex","itemIndex","e","secIndex","itIndex","findIndex","setTimeout","scrollToLocation","animated","sectionIndex","viewPosition","OS","onTextInputFocus","measureInWindow","ddTop","bottomMetric","androidOnLayout","onModalBlur","handleOptionSelect","v","onChangeSearch","query","matches","sF","c","toString","toLowerCase","trim","includes","concat","title","length","getEmptyComponent","labelAction","fullWidth","textInput","primary","modalStyle","backgroundColor","left","top","right","position","padding","surface","maxHeight","loader","background","divider","undefined","item","section","headerView","headerText","Math","random","_d","index","offset","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  TextInput,\n  Surface,\n  Divider,\n  HelperText,\n  Searchbar,\n  Text,\n  Provider as PaperProvider,\n  useTheme,\n} from 'react-native-paper';\nimport {\n  View,\n  Dimensions,\n  Platform,\n  SectionList,\n  ActivityIndicator,\n} from 'react-native';\nimport Modal from 'react-native-modal';\nimport Lo from 'lodash';\n\nimport Item from '../Components/Item';\nimport { defaultDropdownProps, ITEMLAYOUT } from '../constants';\nimport styles from '../styles';\nimport type {\n  IDropdownData,\n  IGroupDropdownData,\n  IGroupDropdownProps,\n} from '../types';\nimport { deviceWidth, deviceHeight } from '../util';\nimport EmptyList from '../Components/EmptyList';\nimport PressableTouch from '../Components/PressableTouch';\n\nconst GroupDropdown: React.FC<IGroupDropdownProps> = props => {\n  const {\n    error,\n    value,\n    label,\n    required,\n    disabled,\n    data,\n    onChange,\n    floating,\n    enableSearch,\n    primaryColor,\n    elevation,\n    borderRadius,\n    activityIndicatorColor,\n    searchPlaceholder,\n    helperText,\n    errorColor,\n    itemTextStyle,\n    itemContainerStyle,\n    showLoader,\n    animationIn = 'fadeIn',\n    animationOut = 'fadeOut',\n    supportedOrientations = ['portrait', 'landscape'],\n    animationInTiming,\n    animationOutTiming,\n    headerTextStyle,\n    headerContainerStyle,\n    stickySectionHeadersEnabled,\n    parentDDContainerStyle,\n    rippleColor,\n    emptyListText,\n    enableAvatar,\n    avatarSize,\n    onBlur,\n    paperTheme,\n    textInputStyle,\n    mainContainerStyle,\n    underlineColor,\n    disableSelectionTick,\n    selectedItemTextStyle,\n    selectedItemViewStyle,\n    removeLabel,\n    mode = 'flat',\n    disabledItemTextStyle,\n    disabledItemViewStyle,\n    dropdownIcon = 'menu-down',\n    dropdownIconSize = 30,\n    itemSelectIcon,\n    itemSelectIconSize,\n    multiline = false,\n    searchInputTheme,\n  } = props;\n  const { colors } = useTheme();\n  const [selected, setSelected] = useState<string | number>();\n  const [labelv, setlabelV] = useState<string>('');\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [iconColor, setIconColor] = useState<string | undefined>('grey');\n  const [options, setOptions] = useState<IGroupDropdownData[]>([]);\n  const [hasError, setError] = useState<boolean>(false);\n  const [singluarData, setSingularData] = useState<IDropdownData[]>([]);\n\n  const [contMeasure, setConMeasure] = useState({\n    vx: 0,\n    vy: 0,\n    vWidth: 0,\n    vHeight: 0,\n  });\n  const [dimension, setDimension] = useState({\n    dw: deviceWidth,\n    dh: deviceHeight,\n  });\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const pViewRef = useRef<View | any>();\n  const listRef = useRef<SectionList | any>();\n\n  useEffect(() => {\n    Dimensions.addEventListener('change', () => {\n      const { width, height } = Dimensions.get('window');\n      setDimension({ dw: width, dh: height });\n      setIsVisible(false);\n      setIconColor('grey');\n    });\n    return () => {\n      Dimensions.removeEventListener('change', () => {});\n    };\n  }, []);\n\n  useEffect(() => {\n    const destructuredData: IDropdownData[] = [];\n    Lo.forEach(data, d => {\n      Lo.forEach(d.data, dv => destructuredData.push(dv));\n    });\n    setSingularData(destructuredData);\n    setOptions(data);\n  }, [data]);\n\n  useEffect(() => {\n    if (!Lo.isEmpty(singluarData) && value) {\n      const lFilter = Lo.filter(singluarData, { value: value })[0];\n      if (!Lo.isEmpty(lFilter)) setlabelV(lFilter.label);\n      setSelected(value);\n    }\n  }, [value, singluarData]);\n\n  useEffect(() => {\n    if (isVisible && listRef) {\n      listRef.current.flashScrollIndicators();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isVisible && selected) {\n      let secionIndex = 0;\n      let itemIndex = 0;\n      if (!Lo.isEmpty(options)) {\n        options.forEach((e, secIndex) => {\n          const itIndex = Lo.findIndex(e.data, { value: selected });\n          if (itIndex >= 0 && listRef) {\n            itemIndex = itIndex;\n            secionIndex = secIndex;\n            setTimeout(() => {\n              listRef.current.scrollToLocation({\n                animated: false,\n                sectionIndex: secionIndex,\n                itemIndex: itemIndex,\n                viewPosition: Platform.OS === 'android' ? 0 : 0.5,\n              });\n            }, 100);\n          }\n        });\n      }\n    }\n  }, [selected, options, isVisible]);\n\n  useEffect(() => {\n    if (disabled) {\n      setIconColor('lightgrey');\n    }\n  }, [disabled]);\n\n  useEffect(() => {\n    if (required && error) {\n      setError(true);\n      setIconColor(errorColor);\n    } else {\n      setError(false);\n      setIconColor('grey');\n    }\n  }, [required, error, errorColor]);\n\n  const onTextInputFocus = () => {\n    if (hasError) {\n      setIconColor('red');\n    } else {\n      setIconColor(primaryColor);\n    }\n    // if (Platform.OS === 'ios') {\n    pViewRef.current.measureInWindow(\n      (vx: number, vy: number, vWidth: number, vHeight: number) => {\n        const ddTop = vy + vHeight;\n        const bottomMetric = dimension.dh - vy;\n        if (bottomMetric < 300) {\n          setConMeasure({ vx, vy: ddTop - 217, vWidth, vHeight });\n        } else {\n          setConMeasure({ vx, vy: ddTop, vWidth, vHeight });\n        }\n      }\n    );\n    // }\n    setIsVisible(true);\n  };\n\n  const androidOnLayout = () => {\n    if (Platform.OS === 'android') {\n      pViewRef.current.measureInWindow(\n        (vx: number, vy: number, vWidth: number, vHeight: number) => {\n          const ddTop = vy + vHeight;\n          const bottomMetric = dimension.dh - vy;\n          // setPx(bottomMetric);\n          if (bottomMetric < 300) {\n            setConMeasure({ vx, vy: ddTop - 217, vWidth, vHeight });\n          } else {\n            setConMeasure({ vx, vy: ddTop, vWidth, vHeight });\n          }\n        }\n      );\n    }\n  };\n\n  const onModalBlur = () => {\n    setIsVisible(false);\n    if (hasError) {\n      setIconColor('red');\n    } else {\n      setIconColor('grey');\n    }\n    if (onBlur && typeof onBlur === 'function') onBlur();\n  };\n\n  const handleOptionSelect = (v: string | number) => {\n    const lFilter = Lo.filter(singluarData, { value: v })[0];\n    if (!Lo.isEmpty(lFilter)) setlabelV(lFilter.label);\n    setSelected(v);\n    if (onChange && typeof onChange === 'function') {\n      onChange(v);\n      setIsVisible(false);\n    }\n    if (hasError) {\n      setIconColor('red');\n    } else {\n      setIconColor('grey');\n    }\n    setSearchQuery('');\n\n    setOptions(data);\n  };\n\n  const onChangeSearch = (query: string) => {\n    setSearchQuery(query);\n    if (!Lo.isEmpty(data) && query) {\n      let matches: IGroupDropdownData[] = [];\n      data.forEach(e => {\n        const sF = e.data.filter(c =>\n          c.label\n            .toString()\n            .toLowerCase()\n            .trim()\n            .includes(query.toString().toLowerCase())\n        );\n        if (!Lo.isEmpty(sF))\n          matches = matches.concat([{ title: e.title, data: sF }]);\n      });\n      if (matches.length === 0) setOptions([]);\n      else setOptions(matches);\n    } else if (!Lo.isEmpty(data) && !query) {\n      setOptions(data);\n    }\n  };\n\n  const getEmptyComponent = () => {\n    if (typeof emptyListText === 'string')\n      return <EmptyList emptyItemMessage={emptyListText} />;\n    else return <>{emptyListText}</>;\n  };\n\n  const labelAction = () => {\n    if (removeLabel) {\n      return '';\n    } else {\n      return required ? `${label}*` : label;\n    }\n  };\n\n  return (\n    <PaperProvider theme={paperTheme}>\n      <View>\n        <View>\n          <PressableTouch\n            onPress={onTextInputFocus}\n            disabled={disabled}\n            rippleColor={rippleColor}\n          >\n            <View\n              style={[styles.fullWidth, mainContainerStyle]}\n              ref={pViewRef}\n              onLayout={androidOnLayout}\n              pointerEvents=\"none\"\n            >\n              <TextInput\n                label={labelAction()}\n                value={labelv}\n                style={[styles.textInput, textInputStyle]}\n                underlineColor={underlineColor}\n                underlineColorAndroid={underlineColor}\n                editable={false}\n                error={hasError}\n                disabled={disabled}\n                multiline={multiline}\n                theme={{\n                  ...searchInputTheme,\n                  colors: { primary: primaryColor, error: errorColor },\n                }}\n                right={\n                  <TextInput.Icon\n                    name={dropdownIcon}\n                    size={dropdownIconSize}\n                    color={iconColor}\n                  />\n                }\n                mode={mode}\n              />\n            </View>\n            {required && hasError ? (\n              <HelperText\n                type=\"error\"\n                theme={{ colors: { error: errorColor } }}\n                visible={hasError}\n              >\n                {helperText ? helperText : `${label} is required`}\n              </HelperText>\n            ) : null}\n          </PressableTouch>\n        </View>\n        <View>\n          <Modal\n            isVisible={isVisible}\n            onBackdropPress={onModalBlur}\n            backdropColor={floating ? 'rgba(0,0,0,0.1)' : 'transparent'}\n            style={styles.modalStyle}\n            animationIn={animationIn}\n            animationOut={animationOut}\n            animationInTiming={animationInTiming}\n            animationOutTiming={animationOutTiming}\n            supportedOrientations={supportedOrientations}\n          >\n            <View\n              style={{\n                backgroundColor: 'transparent',\n                width: !floating ? contMeasure.vWidth : 'auto',\n                left: !floating ? contMeasure.vx : 0,\n                top: !floating ? contMeasure.vy : 100,\n                right: 0,\n                position: 'absolute',\n                padding: floating ? 20 : 0,\n              }}\n            >\n              <Surface\n                style={[\n                  styles.surface,\n                  parentDDContainerStyle,\n                  { elevation, borderRadius },\n                  floating ? { maxHeight: dimension.dh / 2 } : null,\n                ]}\n              >\n                {showLoader ? (\n                  <View style={[styles.loader, { borderRadius }]}>\n                    <ActivityIndicator\n                      size=\"small\"\n                      color={activityIndicatorColor}\n                    />\n                  </View>\n                ) : null}\n                <SectionList\n                  ref={listRef}\n                  sections={options}\n                  legacyImplementation\n                  initialNumToRender={25}\n                  maxToRenderPerBatch={25}\n                  ListHeaderComponent={\n                    enableSearch ? (\n                      <View>\n                        <Searchbar\n                          placeholder={searchPlaceholder}\n                          onChangeText={onChangeSearch}\n                          value={searchQuery}\n                          theme={{ colors: { primary: primaryColor } }}\n                          style={{\n                            elevation: 0,\n                            backgroundColor: showLoader\n                              ? 'transparent'\n                              : colors.background,\n                            height: ITEMLAYOUT,\n                          }}\n                        />\n                        <Divider style={styles.divider} />\n                      </View>\n                    ) : null\n                  }\n                  stickyHeaderIndices={enableSearch ? [0] : undefined}\n                  renderItem={({ item }) => (\n                    <Item\n                      item={item}\n                      onSelect={handleOptionSelect}\n                      selected={value}\n                      selectedColor={primaryColor}\n                      itemTextStyle={itemTextStyle}\n                      itemContainerStyle={itemContainerStyle}\n                      rippleColor={rippleColor}\n                      disabled={showLoader || item?.disabled}\n                      enableAvatar={enableAvatar}\n                      avatarSize={avatarSize}\n                      disableSelectionTick={disableSelectionTick}\n                      selectedItemTextStyle={selectedItemTextStyle}\n                      selectedItemViewStyle={selectedItemViewStyle}\n                      disabledItemTextStyle={disabledItemTextStyle}\n                      disabledItemViewStyle={disabledItemViewStyle}\n                      itemSelectIcon={itemSelectIcon}\n                      itemSelectIconSize={itemSelectIconSize}\n                    />\n                  )}\n                  renderSectionHeader={({ section: { title } }) => (\n                    <View\n                      style={{\n                        backgroundColor: showLoader\n                          ? 'transparent'\n                          : colors.background,\n                        borderRadius: 3,\n                      }}\n                    >\n                      <Divider style={styles.divider} />\n                      <View style={[styles.headerView, headerContainerStyle]}>\n                        <Text style={[styles.headerText, headerTextStyle]}>\n                          {title.trim()}\n                        </Text>\n                      </View>\n                      <Divider style={styles.divider} />\n                    </View>\n                  )}\n                  keyExtractor={() => Math.random().toString()}\n                  ItemSeparatorComponent={() => (\n                    <Divider style={styles.divider} />\n                  )}\n                  getItemLayout={(_d, index) => ({\n                    length: ITEMLAYOUT,\n                    offset: ITEMLAYOUT * index,\n                    index,\n                  })}\n                  stickySectionHeadersEnabled={stickySectionHeadersEnabled}\n                  ListEmptyComponent={getEmptyComponent()}\n                />\n              </Surface>\n            </View>\n          </Modal>\n        </View>\n      </View>\n    </PaperProvider>\n  );\n};\n\nGroupDropdown.defaultProps = defaultDropdownProps;\nexport default GroupDropdown;\n"]}