{"version":3,"sources":["index.tsx"],"names":["React","useState","useRef","useEffect","TextInput","Surface","Divider","HelperText","Searchbar","Provider","PaperProvider","useTheme","View","Dimensions","Platform","FlatList","ActivityIndicator","Modal","Lo","Item","defaultDropdownProps","ITEMLAYOUT","styles","deviceWidth","deviceHeight","EmptyList","PressableTouch","Dropdown","props","error","value","label","required","disabled","data","onChange","floating","enableSearch","primaryColor","elevation","borderRadius","activityIndicatorColor","searchPlaceholder","rippleColor","helperText","errorColor","itemTextStyle","itemContainerStyle","showLoader","animationIn","animationOut","supportedOrientations","animationInTiming","animationOutTiming","parentDDContainerStyle","emptyListText","disableSort","enableAvatar","avatarSize","defaultSortOrder","onBlur","paperTheme","textInputStyle","mainContainerStyle","underlineColor","disableSelectionTick","textInputPlaceholder","textInputPlaceholderColor","selectedItemTextStyle","selectedItemViewStyle","removeLabel","mode","disabledItemTextStyle","disabledItemViewStyle","dropdownIcon","dropdownIconSize","itemSelectIcon","itemSelectIconSize","multiline","searchInputTheme","colors","selected","setSelected","labelv","setLabelV","isVisible","setIsVisible","iconColor","setIconColor","options","setOptions","hasError","setError","contMeasure","setConMeasure","vx","vy","vWidth","vHeight","dimension","setDimension","dw","dh","searchQuery","setSearchQuery","pViewRef","listRef","addEventListener","width","height","get","removeEventListener","isEmpty","lFilter","filter","current","flashScrollIndicators","orderBy","selectedIndex","findIndex","setTimeout","scrollToIndex","animated","index","viewPosition","OS","onTextInputFocus","measureInWindow","ddTop","bottomMetric","androidOnLayout","onModalBlur","handleOptionSelect","v","onChangeSearch","query","opt","toString","toLowerCase","trim","includes","length","sortBy","getEmptyComponent","labelAction","fullWidth","textInput","primary","modalStyle","backgroundColor","background","left","top","right","position","padding","surface","maxHeight","loader","divider","undefined","item","Math","random","_d","offset","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SACEC,SADF,EAEEC,OAFF,EAGEC,OAHF,EAIEC,UAJF,EAKEC,SALF,EAMEC,QAAQ,IAAIC,aANd,EAOEC,QAPF,QAQO,oBARP;AASA,SACEC,IADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,iBALF,QAMO,cANP;AAOA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,EAAP,MAAe,QAAf;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,oBAAT,EAA+BC,UAA/B,QAAiD,cAAjD;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,SAA1C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;AAEA,MAAMC,QAAkC,GAAGC,KAAK,IAAI;AAClD,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,YATI;AAUJC,IAAAA,YAVI;AAWJC,IAAAA,SAXI;AAYJC,IAAAA,YAZI;AAaJC,IAAAA,sBAbI;AAcJC,IAAAA,iBAdI;AAeJC,IAAAA,WAAW,GAAG,aAfV;AAgBJC,IAAAA,UAhBI;AAiBJC,IAAAA,UAjBI;AAkBJC,IAAAA,aAlBI;AAmBJC,IAAAA,kBAnBI;AAoBJC,IAAAA,UApBI;AAqBJC,IAAAA,WAAW,GAAG,QArBV;AAsBJC,IAAAA,YAAY,GAAG,SAtBX;AAuBJC,IAAAA,qBAAqB,GAAG,CAAC,UAAD,EAAa,WAAb,CAvBpB;AAwBJC,IAAAA,iBAxBI;AAyBJC,IAAAA,kBAzBI;AA0BJC,IAAAA,sBA1BI;AA2BJC,IAAAA,aA3BI;AA4BJC,IAAAA,WA5BI;AA6BJC,IAAAA,YA7BI;AA8BJC,IAAAA,UA9BI;AA+BJC,IAAAA,gBAAgB,GAAG,KA/Bf;AAgCJC,IAAAA,MAhCI;AAiCJC,IAAAA,UAjCI;AAkCJC,IAAAA,cAlCI;AAmCJC,IAAAA,kBAnCI;AAoCJC,IAAAA,cApCI;AAqCJC,IAAAA,oBArCI;AAsCJC,IAAAA,oBAtCI;AAuCJC,IAAAA,yBAvCI;AAwCJC,IAAAA,qBAxCI;AAyCJC,IAAAA,qBAzCI;AA0CJC,IAAAA,WA1CI;AA2CJC,IAAAA,IAAI,GAAG,MA3CH;AA4CJC,IAAAA,qBA5CI;AA6CJC,IAAAA,qBA7CI;AA8CJC,IAAAA,YAAY,GAAG,WA9CX;AA+CJC,IAAAA,gBAAgB,GAAG,EA/Cf;AAgDJC,IAAAA,cAhDI;AAiDJC,IAAAA,kBAjDI;AAkDJC,IAAAA,SAAS,GAAG,KAlDR;AAmDJC,IAAAA;AAnDI,MAoDFnD,KApDJ;AAqDA,QAAM;AAAEoD,IAAAA;AAAF,MAAarE,QAAQ,EAA3B;AACA,QAAM,CAACsE,QAAD,EAAWC,WAAX,IAA0BjF,QAAQ,EAAxC;AACA,QAAM,CAACkF,MAAD,EAASC,SAAT,IAAsBnF,QAAQ,CAAS,EAAT,CAApC;AACA,QAAM,CAACoF,SAAD,EAAYC,YAAZ,IAA4BrF,QAAQ,CAAU,KAAV,CAA1C;AACA,QAAM,CAACsF,SAAD,EAAYC,YAAZ,IAA4BvF,QAAQ,CAAqB,MAArB,CAA1C;AACA,QAAM,CAACwF,OAAD,EAAUC,UAAV,IAAwBzF,QAAQ,CAAkB,EAAlB,CAAtC;AACA,QAAM,CAAC0F,QAAD,EAAWC,QAAX,IAAuB3F,QAAQ,CAAU,KAAV,CAArC;AACA,QAAM,CAAC4F,WAAD,EAAcC,aAAd,IAA+B7F,QAAQ,CAAC;AAC5C8F,IAAAA,EAAE,EAAE,CADwC;AAE5CC,IAAAA,EAAE,EAAE,CAFwC;AAG5CC,IAAAA,MAAM,EAAE,CAHoC;AAI5CC,IAAAA,OAAO,EAAE;AAJmC,GAAD,CAA7C;AAMA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnG,QAAQ,CAAC;AACzCoG,IAAAA,EAAE,EAAE9E,WADqC;AAEzC+E,IAAAA,EAAE,EAAE9E;AAFqC,GAAD,CAA1C;AAIA,QAAM,CAAC+E,WAAD,EAAcC,cAAd,IAAgCvG,QAAQ,CAAS,EAAT,CAA9C;AACA,QAAMwG,QAAQ,GAAGvG,MAAM,EAAvB;AACA,QAAMwG,OAAO,GAAGxG,MAAM,EAAtB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,UAAU,CAAC8F,gBAAX,CAA4B,QAA5B,EAAsC,MAAM;AAC1CrB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,YAAM;AAAEsB,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAoBhG,UAAU,CAACiG,GAAX,CAAe,QAAf,CAA1B;AACAV,MAAAA,YAAY,CAAC;AAAEC,QAAAA,EAAE,EAAEO,KAAN;AAAaN,QAAAA,EAAE,EAAEO;AAAjB,OAAD,CAAZ;AACArB,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACD,KALD;AAMA,WAAO,MAAM;AACX3E,MAAAA,UAAU,CAACkG,mBAAX,CAA+B,QAA/B,EAAyC,MAAM,CAAE,CAAjD;AACD,KAFD;AAGD,GAVQ,EAUN,EAVM,CAAT;AAYA5G,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACe,EAAE,CAAC8F,OAAH,CAAW9E,IAAX,CAAD,IAAqBJ,KAAzB,EAAgC;AAC9B,YAAMmF,OAAO,GAAG/F,EAAE,CAACgG,MAAH,CAAUhF,IAAV,EAAgB;AAAEJ,QAAAA,KAAK,EAAEA;AAAT,OAAhB,EAAkC,CAAlC,CAAhB;AACA,UAAI,CAACZ,EAAE,CAAC8F,OAAH,CAAWC,OAAX,CAAL,EAA0B7B,SAAS,CAAC6B,OAAO,CAAClF,KAAT,CAAT;AAC3B;AACF,GALQ,EAKN,CAACD,KAAD,EAAQI,IAAR,CALM,CAAT;AAOA/B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI8B,QAAJ,EAAc;AACZuD,MAAAA,YAAY,CAAC,WAAD,CAAZ;AACD;AACF,GAJQ,EAIN,CAACvD,QAAD,CAJM,CAAT;AAMA9B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkF,SAAS,IAAIqB,OAAjB,EAA0B;AACxBA,MAAAA,OAAO,CAACS,OAAR,CAAgBC,qBAAhB;AACD;AACF,GAJQ,EAIN,CAAC/B,SAAD,CAJM,CAAT;AAMAlF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACqD,WAAL,EACEkC,UAAU,CAACxE,EAAE,CAACmG,OAAH,CAAWnF,IAAX,EAAiB,CAAC,OAAD,CAAjB,EAA4B,CAACyB,gBAAD,CAA5B,CAAD,CAAV,CADF,KAEK+B,UAAU,CAACxD,IAAD,CAAV;AACN,GAJQ,EAIN,CAACA,IAAD,EAAOsB,WAAP,EAAoBG,gBAApB,CAJM,CAAT;AAMAxD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkF,SAAS,IAAIJ,QAAjB,EAA2B;AACzB,YAAMqC,aAAa,GAAGpG,EAAE,CAACqG,SAAH,CAAa9B,OAAb,EAAsB;AAAE3D,QAAAA,KAAK,EAAEmD;AAAT,OAAtB,CAAtB;;AACA,UAAIqC,aAAa,IAAI,CAAjB,IAAsBZ,OAA1B,EAAmC;AACjCc,QAAAA,UAAU,CAAC,MAAM;AACfd,UAAAA,OAAO,CAACS,OAAR,CAAgBM,aAAhB,CAA8B;AAC5BC,YAAAA,QAAQ,EAAE,KADkB;AAE5BC,YAAAA,KAAK,EAAEL,aAFqB;AAG5BM,YAAAA,YAAY,EAAE9G,QAAQ,CAAC+G,EAAT,KAAgB,SAAhB,GAA4B,CAA5B,GAAgC;AAHlB,WAA9B;AAKD,SANS,EAMP,GANO,CAAV;AAOD;AACF;AACF,GAbQ,EAaN,CAAC5C,QAAD,EAAWQ,OAAX,EAAoBJ,SAApB,CAbM,CAAT;AAeAlF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6B,QAAQ,IAAIH,KAAhB,EAAuB;AACrB+D,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAJ,MAAAA,YAAY,CAAC3C,UAAD,CAAZ;AACD,KAHD,MAGO;AACL+C,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAJ,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACD;AACF,GARQ,EAQN,CAACxD,QAAD,EAAWH,KAAX,EAAkBgB,UAAlB,CARM,CAAT;;AAUA,QAAMiF,gBAAgB,GAAG,MAAM;AAC7B,QAAInC,QAAJ,EAAc;AACZH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAClD,YAAD,CAAZ;AACD;;AACDmE,IAAAA,QAAQ,CAACU,OAAT,CAAiBY,eAAjB,CACE,CAAChC,EAAD,EAAaC,EAAb,EAAyBC,MAAzB,EAAyCC,OAAzC,KAA6D;AAC3D,YAAM8B,KAAK,GAAGhC,EAAE,GAAGE,OAAnB;AACA,YAAM+B,YAAY,GAAG9B,SAAS,CAACG,EAAV,GAAeN,EAApC;;AACA,UAAIiC,YAAY,GAAG,GAAnB,EAAwB;AACtBnC,QAAAA,aAAa,CAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,EAAE,EAAEgC,KAAK,GAAG,GAAlB;AAAuB/B,UAAAA,MAAvB;AAA+BC,UAAAA;AAA/B,SAAD,CAAb;AACD,OAFD,MAEO;AACLJ,QAAAA,aAAa,CAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,EAAE,EAAEgC,KAAV;AAAiB/B,UAAAA,MAAjB;AAAyBC,UAAAA;AAAzB,SAAD,CAAb;AACD;AACF,KATH;AAWAZ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAlBD;;AAoBA,QAAM4C,eAAe,GAAG,MAAM;AAC5B,QAAIpH,QAAQ,CAAC+G,EAAT,KAAgB,SAApB,EAA+B;AAC7BpB,MAAAA,QAAQ,CAACU,OAAT,CAAiBY,eAAjB,CACE,CAAChC,EAAD,EAAaC,EAAb,EAAyBC,MAAzB,EAAyCC,OAAzC,KAA6D;AAC3D,cAAM8B,KAAK,GAAGhC,EAAE,GAAGE,OAAnB;AACA,cAAM+B,YAAY,GAAG9B,SAAS,CAACG,EAAV,GAAeN,EAApC;;AACA,YAAIiC,YAAY,GAAG,GAAnB,EAAwB;AACtBnC,UAAAA,aAAa,CAAC;AAAEC,YAAAA,EAAF;AAAMC,YAAAA,EAAE,EAAEgC,KAAK,GAAG,GAAlB;AAAuB/B,YAAAA,MAAvB;AAA+BC,YAAAA;AAA/B,WAAD,CAAb;AACD,SAFD,MAEO;AACLJ,UAAAA,aAAa,CAAC;AAAEC,YAAAA,EAAF;AAAMC,YAAAA,EAAE,EAAEgC,KAAV;AAAiB/B,YAAAA,MAAjB;AAAyBC,YAAAA;AAAzB,WAAD,CAAb;AACD;AACF,OATH;AAWD;AACF,GAdD;;AAgBA,QAAMiC,WAAW,GAAG,MAAM;AACxB7C,IAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,QAAIK,QAAJ,EAAc;AACZH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACD;;AACD,QAAI5B,MAAM,IAAI,OAAOA,MAAP,KAAkB,UAAhC,EAA4CA,MAAM;AACnD,GARD;;AAUA,QAAMwE,kBAAkB,GAAIC,CAAD,IAAwB;AACjD,UAAMpB,OAAO,GAAG/F,EAAE,CAACgG,MAAH,CAAUhF,IAAV,EAAgB;AAAEJ,MAAAA,KAAK,EAAEuG;AAAT,KAAhB,EAA8B,CAA9B,CAAhB;AACA,QAAI,CAACnH,EAAE,CAAC8F,OAAH,CAAWC,OAAX,CAAL,EAA0B7B,SAAS,CAAC6B,OAAO,CAAClF,KAAT,CAAT;AAC1BmD,IAAAA,WAAW,CAACmD,CAAD,CAAX;;AACA,QAAIlG,QAAQ,IAAI,OAAOA,QAAP,KAAoB,UAApC,EAAgD;AAC9CA,MAAAA,QAAQ,CAACkG,CAAD,CAAR;AACA/C,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACD,QAAIK,QAAJ,EAAc;AACZH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACD;;AACDgB,IAAAA,cAAc,CAAC,EAAD,CAAd;AAEA,QAAI,CAAChD,WAAL,EACEkC,UAAU,CAACxE,EAAE,CAACmG,OAAH,CAAWnF,IAAX,EAAiB,CAAC,OAAD,CAAjB,EAA4B,CAACyB,gBAAD,CAA5B,CAAD,CAAV,CADF,KAEK+B,UAAU,CAACxD,IAAD,CAAV;AACN,GAlBD;;AAoBA,QAAMoG,cAAc,GAAIC,KAAD,IAAmB;AACxC/B,IAAAA,cAAc,CAAC+B,KAAD,CAAd;;AACA,QAAI,CAACrH,EAAE,CAAC8F,OAAH,CAAW9E,IAAX,CAAD,IAAqBqG,KAAzB,EAAgC;AAC9B,YAAMtB,OAAO,GAAG/E,IAAI,CAACgF,MAAL,CAAYsB,GAAG,IAC7BA,GAAG,CAACzG,KAAJ,CACG0G,QADH,GAEGC,WAFH,GAGGC,IAHH,GAIGC,QAJH,CAIYL,KAAK,CAACE,QAAN,GAAiBC,WAAjB,EAJZ,CADc,CAAhB;;AAOA,UAAIzB,OAAO,CAAC4B,MAAR,KAAmB,CAAvB,EAA0B;AACxBnD,QAAAA,UAAU,CAAC,EAAD,CAAV;AACD,OAFD,MAEO;AACLA,QAAAA,UAAU,CAACuB,OAAD,CAAV;AACD;AACF,KAbD,MAaO,IAAI,CAAC/F,EAAE,CAAC8F,OAAH,CAAW9E,IAAX,CAAD,IAAqB,CAACqG,KAAtB,IAA+B,CAAC/E,WAApC,EAAiD;AACtDkC,MAAAA,UAAU,CAACxE,EAAE,CAAC4H,MAAH,CAAU5G,IAAV,EAAgB,OAAhB,CAAD,CAAV;AACD,KAFM,MAEAwD,UAAU,CAACxD,IAAD,CAAV;AACR,GAlBD;;AAoBA,QAAM6G,iBAAiB,GAAG,MAAM;AAC9B,QAAI,OAAOxF,aAAP,KAAyB,QAA7B,EACE,oBAAO,oBAAC,SAAD;AAAW,MAAA,gBAAgB,EAAEA;AAA7B,MAAP,CADF,KAEK,oBAAO,0CAAGA,aAAH,CAAP;AACN,GAJD;;AAMA,QAAMyF,WAAW,GAAG,MAAM;AACxB,QAAI1E,WAAJ,EAAiB;AACf,aAAO,EAAP;AACD,KAFD,MAEO;AACL,aAAOtC,QAAQ,aAAMD,KAAN,SAAiBA,KAAhC;AACD;AACF,GAND;;AAQA,sBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE8B;AAAtB,kBACE,oBAAC,IAAD,qBACE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAEiE,gBADX;AAEE,IAAA,QAAQ,EAAE7F,QAFZ;AAGE,IAAA,WAAW,EAAEU;AAHf,kBAKE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACrB,MAAM,CAAC2H,SAAR,EAAmBlF,kBAAnB,CADT;AAEE,IAAA,GAAG,EAAE0C,QAFP;AAGE,IAAA,QAAQ,EAAEyB,eAHZ;AAIE,IAAA,aAAa,EAAC;AAJhB,kBAME,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEc,WAAW,EADpB;AAEE,IAAA,WAAW,EAAE9E,oBAFf;AAGE,IAAA,oBAAoB,EAAEC,yBAHxB;AAIE,IAAA,KAAK,EAAEgB,MAJT;AAKE,IAAA,KAAK,EAAE,CAAC7D,MAAM,CAAC4H,SAAR,EAAmBpF,cAAnB,CALT;AAME,IAAA,cAAc,EAAEE,cANlB;AAOE,IAAA,qBAAqB,EAAEA,cAPzB;AAQE,IAAA,QAAQ,EAAE,KARZ;AASE,IAAA,KAAK,EAAE2B,QATT;AAUE,IAAA,QAAQ,EAAE1D,QAVZ;AAWE,IAAA,SAAS,EAAE6C,SAXb;AAYE,IAAA,KAAK,EAAE,EACL,GAAGC,gBADE;AAELC,MAAAA,MAAM,EAAE;AAAEmE,QAAAA,OAAO,EAAE7G,YAAX;AAAyBT,QAAAA,KAAK,EAAEgB;AAAhC;AAFH,KAZT;AAgBE,IAAA,KAAK,eACH,oBAAC,SAAD,CAAW,IAAX;AACE,MAAA,IAAI,EAAE6B,YADR;AAEE,MAAA,IAAI,EAAEC,gBAFR;AAGE,MAAA,KAAK,EAAEY;AAHT,MAjBJ;AAuBE,IAAA,IAAI,EAAEhB;AAvBR,IANF,CALF,EAqCGvC,QAAQ,IAAI2D,QAAZ,gBACC,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAE;AAAEX,MAAAA,MAAM,EAAE;AAAEnD,QAAAA,KAAK,EAAEgB;AAAT;AAAV,KAFT;AAGE,IAAA,OAAO,EAAE8C;AAHX,KAKG/C,UAAU,GAAGA,UAAH,aAAmBb,KAAnB,iBALb,CADD,GAQG,IA7CN,CADF,eAgDE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEsD,SADb;AAEE,IAAA,eAAe,EAAE8C,WAFnB;AAGE,IAAA,aAAa,EAAE/F,QAAQ,GAAG,iBAAH,GAAuB,aAHhD;AAIE,IAAA,KAAK,EAAEd,MAAM,CAAC8H,UAJhB;AAKE,IAAA,WAAW,EAAEnG,WALf;AAME,IAAA,YAAY,EAAEC,YANhB;AAOE,IAAA,iBAAiB,EAAEE,iBAPrB;AAQE,IAAA,kBAAkB,EAAEC,kBARtB;AASE,IAAA,qBAAqB,EAAEF;AATzB,kBAWE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLkG,MAAAA,eAAe,EAAErE,MAAM,CAACsE,UADnB;AAEL1C,MAAAA,KAAK,EAAE,CAACxE,QAAD,GAAYyD,WAAW,CAACI,MAAxB,GAAiC,MAFnC;AAGLsD,MAAAA,IAAI,EAAE,CAACnH,QAAD,GAAYyD,WAAW,CAACE,EAAxB,GAA6B,CAH9B;AAILyD,MAAAA,GAAG,EAAE,CAACpH,QAAD,GAAYyD,WAAW,CAACG,EAAxB,GAA6B,GAJ7B;AAKLyD,MAAAA,KAAK,EAAE,CALF;AAMLC,MAAAA,QAAQ,EAAE,UANL;AAOLC,MAAAA,OAAO,EAAEvH,QAAQ,GAAG,EAAH,GAAQ;AAPpB;AADT,kBAWE,oBAAC,OAAD;AACE,IAAA,KAAK,EAAE,CACLd,MAAM,CAACsI,OADF,EAELtG,sBAFK,EAGL;AAAEf,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAHK,EAILJ,QAAQ,GAAG;AAAEyH,MAAAA,SAAS,EAAE1D,SAAS,CAACG,EAAV,GAAe;AAA5B,KAAH,GAAqC,IAJxC;AADT,KAQGtD,UAAU,gBACT,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC1B,MAAM,CAACwI,MAAR,EAAgB;AAAEtH,MAAAA;AAAF,KAAhB;AAAb,kBACE,oBAAC,iBAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,KAAK,EAAEC;AAFT,IADF,CADS,GAOP,IAfN,eAgBE,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEiE,OADP;AAEE,IAAA,IAAI,EAAEjB,OAFR;AAGE,IAAA,kBAAkB,EAAE,EAHtB,CAIE;AAJF;AAKE,IAAA,mBAAmB,MALrB;AAME,IAAA,aAAa,EAAE,CAACzC,UANlB;AAOE,IAAA,mBAAmB,EACjBX,YAAY,gBACV,oBAAC,IAAD,qBACE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAEK,iBADf;AAEE,MAAA,YAAY,EAAE4F,cAFhB;AAGE,MAAA,KAAK,EAAE/B,WAHT;AAIE,MAAA,KAAK,EAAE;AAAEvB,QAAAA,MAAM,EAAE;AAAEmE,UAAAA,OAAO,EAAE7G;AAAX;AAAV,OAJT;AAKE,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,CADN;AAEL8G,QAAAA,eAAe,EAAErG,UAAU,GACvB,aADuB,GAEvBgC,MAAM,CAACsE,UAJN;AAKLzC,QAAAA,MAAM,EAAExF;AALH;AALT,MADF,eAcE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEC,MAAM,CAACyI;AAAvB,MAdF,CADU,GAiBR,IAzBR;AA2BE,IAAA,mBAAmB,EAAE1H,YAAY,GAAG,CAAC,CAAD,CAAH,GAAS2H,SA3B5C;AA4BE,IAAA,UAAU,EAAE,CAAC;AAAEC,MAAAA;AAAF,KAAD,kBACV,oBAAC,IAAD;AACE,MAAA,IAAI,EAAEA,IADR;AAEE,MAAA,QAAQ,EAAE7B,kBAFZ;AAGE,MAAA,QAAQ,EAAEtG,KAHZ;AAIE,MAAA,aAAa,EAAEQ,YAJjB;AAKE,MAAA,aAAa,EAAEQ,aALjB;AAME,MAAA,kBAAkB,EAAEC,kBANtB;AAOE,MAAA,WAAW,EAAEJ,WAPf;AAQE,MAAA,QAAQ,EAAEK,UAAU,KAAIiH,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEhI,QAAV,CARtB;AASE,MAAA,YAAY,EAAEwB,YAThB;AAUE,MAAA,UAAU,EAAEC,UAVd;AAWE,MAAA,oBAAoB,EAAEO,oBAXxB;AAYE,MAAA,qBAAqB,EAAEG,qBAZzB;AAaE,MAAA,qBAAqB,EAAEC,qBAbzB;AAcE,MAAA,qBAAqB,EAAEG,qBAdzB;AAeE,MAAA,qBAAqB,EAAEC,qBAfzB;AAgBE,MAAA,cAAc,EAAEG,cAhBlB;AAiBE,MAAA,kBAAkB,EAAEC;AAjBtB,MA7BJ;AAiDE,IAAA,YAAY,EAAE,MAAMqF,IAAI,CAACC,MAAL,GAAc1B,QAAd,EAjDtB;AAkDE,IAAA,sBAAsB,EAAE,mBACtB,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEnH,MAAM,CAACyI;AAAvB,MAnDJ;AAqDE,IAAA,aAAa,EAAE,CAACK,EAAD,EAAKzC,KAAL,MAAgB;AAC7BkB,MAAAA,MAAM,EAAExH,UADqB;AAE7BgJ,MAAAA,MAAM,EAAEhJ,UAAU,GAAGsG,KAFQ;AAG7BA,MAAAA;AAH6B,KAAhB,CArDjB;AA0DE,IAAA,kBAAkB,EAAEoB,iBAAiB;AA1DvC,IAhBF,CAXF,CAXF,CAhDF,CADF,CADF;AA0JD,CAvYD;;AAyYApH,QAAQ,CAAC2I,YAAT,GAAwBlJ,oBAAxB;AAEA,eAAeO,QAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  TextInput,\n  Surface,\n  Divider,\n  HelperText,\n  Searchbar,\n  Provider as PaperProvider,\n  useTheme,\n} from 'react-native-paper';\nimport {\n  View,\n  Dimensions,\n  Platform,\n  FlatList,\n  ActivityIndicator,\n} from 'react-native';\nimport Modal from 'react-native-modal';\nimport Lo from 'lodash';\n\nimport Item from '../Components/Item';\nimport { defaultDropdownProps, ITEMLAYOUT } from '../constants';\nimport type { IDropdownData, IDropdownProps } from '../types';\nimport styles from '../styles';\nimport { deviceWidth, deviceHeight } from '../util';\nimport EmptyList from '../Components/EmptyList';\nimport PressableTouch from '../Components/PressableTouch';\n\nconst Dropdown: React.FC<IDropdownProps> = props => {\n  const {\n    error,\n    value,\n    label,\n    required,\n    disabled,\n    data,\n    onChange,\n    floating,\n    enableSearch,\n    primaryColor,\n    elevation,\n    borderRadius,\n    activityIndicatorColor,\n    searchPlaceholder,\n    rippleColor = 'transparent',\n    helperText,\n    errorColor,\n    itemTextStyle,\n    itemContainerStyle,\n    showLoader,\n    animationIn = 'fadeIn',\n    animationOut = 'fadeOut',\n    supportedOrientations = ['portrait', 'landscape'],\n    animationInTiming,\n    animationOutTiming,\n    parentDDContainerStyle,\n    emptyListText,\n    disableSort,\n    enableAvatar,\n    avatarSize,\n    defaultSortOrder = 'asc',\n    onBlur,\n    paperTheme,\n    textInputStyle,\n    mainContainerStyle,\n    underlineColor,\n    disableSelectionTick,\n    textInputPlaceholder,\n    textInputPlaceholderColor,\n    selectedItemTextStyle,\n    selectedItemViewStyle,\n    removeLabel,\n    mode = 'flat',\n    disabledItemTextStyle,\n    disabledItemViewStyle,\n    dropdownIcon = 'menu-down',\n    dropdownIconSize = 30,\n    itemSelectIcon,\n    itemSelectIconSize,\n    multiline = false,\n    searchInputTheme,\n  } = props;\n  const { colors } = useTheme();\n  const [selected, setSelected] = useState<string | number>();\n  const [labelv, setLabelV] = useState<string>('');\n  const [isVisible, setIsVisible] = useState<boolean>(false);\n  const [iconColor, setIconColor] = useState<string | undefined>('grey');\n  const [options, setOptions] = useState<IDropdownData[]>([]);\n  const [hasError, setError] = useState<boolean>(false);\n  const [contMeasure, setConMeasure] = useState({\n    vx: 0,\n    vy: 0,\n    vWidth: 0,\n    vHeight: 0,\n  });\n  const [dimension, setDimension] = useState({\n    dw: deviceWidth,\n    dh: deviceHeight,\n  });\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const pViewRef = useRef<View | any>();\n  const listRef = useRef<FlatList | any>();\n\n  useEffect(() => {\n    Dimensions.addEventListener('change', () => {\n      setIsVisible(false);\n      const { width, height } = Dimensions.get('window');\n      setDimension({ dw: width, dh: height });\n      setIconColor('grey');\n    });\n    return () => {\n      Dimensions.removeEventListener('change', () => {});\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!Lo.isEmpty(data) && value) {\n      const lFilter = Lo.filter(data, { value: value })[0];\n      if (!Lo.isEmpty(lFilter)) setLabelV(lFilter.label);\n    }\n  }, [value, data]);\n\n  useEffect(() => {\n    if (disabled) {\n      setIconColor('lightgrey');\n    }\n  }, [disabled]);\n\n  useEffect(() => {\n    if (isVisible && listRef) {\n      listRef.current.flashScrollIndicators();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!disableSort)\n      setOptions(Lo.orderBy(data, ['label'], [defaultSortOrder]));\n    else setOptions(data);\n  }, [data, disableSort, defaultSortOrder]);\n\n  useEffect(() => {\n    if (isVisible && selected) {\n      const selectedIndex = Lo.findIndex(options, { value: selected });\n      if (selectedIndex >= 0 && listRef) {\n        setTimeout(() => {\n          listRef.current.scrollToIndex({\n            animated: false,\n            index: selectedIndex,\n            viewPosition: Platform.OS === 'android' ? 0 : 0.5,\n          });\n        }, 100);\n      }\n    }\n  }, [selected, options, isVisible]);\n\n  useEffect(() => {\n    if (required && error) {\n      setError(true);\n      setIconColor(errorColor);\n    } else {\n      setError(false);\n      setIconColor('grey');\n    }\n  }, [required, error, errorColor]);\n\n  const onTextInputFocus = () => {\n    if (hasError) {\n      setIconColor('red');\n    } else {\n      setIconColor(primaryColor);\n    }\n    pViewRef.current.measureInWindow(\n      (vx: number, vy: number, vWidth: number, vHeight: number) => {\n        const ddTop = vy + vHeight;\n        const bottomMetric = dimension.dh - vy;\n        if (bottomMetric < 300) {\n          setConMeasure({ vx, vy: ddTop - 217, vWidth, vHeight });\n        } else {\n          setConMeasure({ vx, vy: ddTop, vWidth, vHeight });\n        }\n      }\n    );\n    setIsVisible(true);\n  };\n\n  const androidOnLayout = () => {\n    if (Platform.OS === 'android') {\n      pViewRef.current.measureInWindow(\n        (vx: number, vy: number, vWidth: number, vHeight: number) => {\n          const ddTop = vy + vHeight;\n          const bottomMetric = dimension.dh - vy;\n          if (bottomMetric < 300) {\n            setConMeasure({ vx, vy: ddTop - 217, vWidth, vHeight });\n          } else {\n            setConMeasure({ vx, vy: ddTop, vWidth, vHeight });\n          }\n        }\n      );\n    }\n  };\n\n  const onModalBlur = () => {\n    setIsVisible(false);\n    if (hasError) {\n      setIconColor('red');\n    } else {\n      setIconColor('grey');\n    }\n    if (onBlur && typeof onBlur === 'function') onBlur();\n  };\n\n  const handleOptionSelect = (v: string | number) => {\n    const lFilter = Lo.filter(data, { value: v })[0];\n    if (!Lo.isEmpty(lFilter)) setLabelV(lFilter.label);\n    setSelected(v);\n    if (onChange && typeof onChange === 'function') {\n      onChange(v);\n      setIsVisible(false);\n    }\n    if (hasError) {\n      setIconColor('red');\n    } else {\n      setIconColor('grey');\n    }\n    setSearchQuery('');\n\n    if (!disableSort)\n      setOptions(Lo.orderBy(data, ['label'], [defaultSortOrder]));\n    else setOptions(data);\n  };\n\n  const onChangeSearch = (query: string) => {\n    setSearchQuery(query);\n    if (!Lo.isEmpty(data) && query) {\n      const lFilter = data.filter(opt =>\n        opt.label\n          .toString()\n          .toLowerCase()\n          .trim()\n          .includes(query.toString().toLowerCase())\n      );\n      if (lFilter.length === 0) {\n        setOptions([]);\n      } else {\n        setOptions(lFilter);\n      }\n    } else if (!Lo.isEmpty(data) && !query && !disableSort) {\n      setOptions(Lo.sortBy(data, 'label'));\n    } else setOptions(data);\n  };\n\n  const getEmptyComponent = () => {\n    if (typeof emptyListText === 'string')\n      return <EmptyList emptyItemMessage={emptyListText} />;\n    else return <>{emptyListText}</>;\n  };\n\n  const labelAction = () => {\n    if (removeLabel) {\n      return '';\n    } else {\n      return required ? `${label}*` : label;\n    }\n  };\n\n  return (\n    <PaperProvider theme={paperTheme}>\n      <View>\n        <PressableTouch\n          onPress={onTextInputFocus}\n          disabled={disabled}\n          rippleColor={rippleColor}\n        >\n          <View\n            style={[styles.fullWidth, mainContainerStyle]}\n            ref={pViewRef}\n            onLayout={androidOnLayout}\n            pointerEvents=\"none\"\n          >\n            <TextInput\n              label={labelAction()}\n              placeholder={textInputPlaceholder}\n              placeholderTextColor={textInputPlaceholderColor}\n              value={labelv}\n              style={[styles.textInput, textInputStyle]}\n              underlineColor={underlineColor}\n              underlineColorAndroid={underlineColor}\n              editable={false}\n              error={hasError}\n              disabled={disabled}\n              multiline={multiline}\n              theme={{\n                ...searchInputTheme,\n                colors: { primary: primaryColor, error: errorColor },\n              }}\n              right={\n                <TextInput.Icon\n                  name={dropdownIcon}\n                  size={dropdownIconSize}\n                  color={iconColor}\n                />\n              }\n              mode={mode}\n            />\n          </View>\n          {required && hasError ? (\n            <HelperText\n              type=\"error\"\n              theme={{ colors: { error: errorColor } }}\n              visible={hasError}\n            >\n              {helperText ? helperText : `${label} is required`}\n            </HelperText>\n          ) : null}\n        </PressableTouch>\n        <Modal\n          isVisible={isVisible}\n          onBackdropPress={onModalBlur}\n          backdropColor={floating ? 'rgba(0,0,0,0.1)' : 'transparent'}\n          style={styles.modalStyle}\n          animationIn={animationIn}\n          animationOut={animationOut}\n          animationInTiming={animationInTiming}\n          animationOutTiming={animationOutTiming}\n          supportedOrientations={supportedOrientations}\n        >\n          <View\n            style={{\n              backgroundColor: colors.background,\n              width: !floating ? contMeasure.vWidth : 'auto',\n              left: !floating ? contMeasure.vx : 0,\n              top: !floating ? contMeasure.vy : 100,\n              right: 0,\n              position: 'absolute',\n              padding: floating ? 20 : 0,\n            }}\n          >\n            <Surface\n              style={[\n                styles.surface,\n                parentDDContainerStyle,\n                { elevation, borderRadius },\n                floating ? { maxHeight: dimension.dh / 2 } : null,\n              ]}\n            >\n              {showLoader ? (\n                <View style={[styles.loader, { borderRadius }]}>\n                  <ActivityIndicator\n                    size=\"small\"\n                    color={activityIndicatorColor}\n                  />\n                </View>\n              ) : null}\n              <FlatList\n                ref={listRef}\n                data={options}\n                initialNumToRender={50}\n                // maxToRenderPerBatch={25}\n                persistentScrollbar\n                scrollEnabled={!showLoader}\n                ListHeaderComponent={\n                  enableSearch ? (\n                    <View>\n                      <Searchbar\n                        placeholder={searchPlaceholder}\n                        onChangeText={onChangeSearch}\n                        value={searchQuery}\n                        theme={{ colors: { primary: primaryColor } }}\n                        style={{\n                          elevation: 0,\n                          backgroundColor: showLoader\n                            ? 'transparent'\n                            : colors.background,\n                          height: ITEMLAYOUT,\n                        }}\n                      />\n                      <Divider style={styles.divider} />\n                    </View>\n                  ) : null\n                }\n                stickyHeaderIndices={enableSearch ? [0] : undefined}\n                renderItem={({ item }) => (\n                  <Item\n                    item={item}\n                    onSelect={handleOptionSelect}\n                    selected={value}\n                    selectedColor={primaryColor}\n                    itemTextStyle={itemTextStyle}\n                    itemContainerStyle={itemContainerStyle}\n                    rippleColor={rippleColor}\n                    disabled={showLoader || item?.disabled}\n                    enableAvatar={enableAvatar}\n                    avatarSize={avatarSize}\n                    disableSelectionTick={disableSelectionTick}\n                    selectedItemTextStyle={selectedItemTextStyle}\n                    selectedItemViewStyle={selectedItemViewStyle}\n                    disabledItemTextStyle={disabledItemTextStyle}\n                    disabledItemViewStyle={disabledItemViewStyle}\n                    itemSelectIcon={itemSelectIcon}\n                    itemSelectIconSize={itemSelectIconSize}\n                  />\n                )}\n                keyExtractor={() => Math.random().toString()}\n                ItemSeparatorComponent={() => (\n                  <Divider style={styles.divider} />\n                )}\n                getItemLayout={(_d, index) => ({\n                  length: ITEMLAYOUT,\n                  offset: ITEMLAYOUT * index,\n                  index,\n                })}\n                ListEmptyComponent={getEmptyComponent()}\n              />\n            </Surface>\n          </View>\n        </Modal>\n      </View>\n    </PaperProvider>\n  );\n};\n\nDropdown.defaultProps = defaultDropdownProps;\n\nexport default Dropdown;\n"]}